<!DOCTYPE HTML>
<html lang="de">
<head>
<title>OnError() - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Die OnError-Funktion bestimmt eine Funktion, die automatisch gestartet werden soll, wenn ein unbehandelter Fehler auftritt." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>OnError() <span class="ver">[v1.1.29+]</span></h1>
<p>Bestimmt eine <a href="../Functions.htm">Funktion</a>, die automatisch gestartet werden soll, wenn ein unbehandelter Fehler auftritt.</p>

<pre class="Syntax"><span class="func">OnError</span>(Func <span class="optional">, HinzufügenEntfernen</span>)</pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Func</dt>
  <dd><p>Ein Funktionsname oder <a href="../objects/Functor.htm">Funktionsobjekt</a>, die aufgerufen werden sollen, wenn ein unbehandelter Fehler auftritt. Die Funktion erhält das Exception-Objekt als Parameter. Sie kann via Return einen Integer ungleich Null zurückgeben, um das voreingestellte Fehlerdialogfenster zu unterdrücken.</p></dd>
  
  <dt>HinzufügenEntfernen</dt>
  <dd><p>Wenn dieser Parameter weggelassen wird oder leer ist, wird standardmäßig 1 (die Funktion nach anderen zuvor registrierten Funktionen aufrufen) verwendet. Ansonsten können Sie eine der folgenden Zahlen angeben:</p>
    <ul>
      <li>1 = Die Funktion nach anderen zuvor registrierten Funktionen aufrufen.</li>
      <li>-1 = Die Funktion vor anderen zuvor registrierten Funktionen aufrufen.</li>
      <li>0 = Die Funktion nicht aufrufen.</li>
    </ul>
  </dd>

</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p><em>Func</em> wird nur bei Fehlern oder Ausnahmen aufgerufen, die normalerweise zu einer Fehlermeldung führen würden. Ladezeitfehler gehören nicht dazu, da OnError erst nach dem Laden des Skripts aufgerufen werden kann.</p>
<p>Wenn eine Fehlerfunktion einen Integer ungleich Null via Return zurückgibt, wird der Thread beendet. Wenn innerhalb einer Fehlerfunktion ein Fehler auftritt (oder eine Ausnahme ausgelöst wird), wird eine Fehlermeldung für den neuen Fehler angezeigt und der Thread beendet. Ansonsten werden alle Fehlerfunktionen aufgerufen, eine Fehlermeldung angezeigt und der Thread beendet.</p>
<p>Der erste Parameter von <em>Func</em> erhält den Wert oder das <a href="Throw.htm#Exception">Exception</a>-Objekt der ausgelösten Ausnahme. Wenn es sich um ein Objekt handelt, kann es modifiziert werden, um zu bestimmen, was das voreingestellte Fehlerdialogfenster anzeigen soll.</p>
<p><em>Func</em> wird während des aktuellen <a href="../misc/Threads.htm">Threads</a> aufgerufen, bevor er beendet wird (also bevor der Aufrufstapel abgearbeitet wurde).</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="Try.htm">Try</a>, <a href="Catch.htm">Catch</a>, <a href="Throw.htm">Throw</a>, <a href="OnExit.htm#function">OnExit()</a>, <a href="OnExit.htm#command">OnExit</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Protokolliert Fehler, die vom Skript verursacht werden, in eine Textdatei, anstatt sie dem Benutzer anzuzeigen.</p>
<pre>
OnError("FehlerProtokollieren")
%Fehler% := auslösen

FehlerProtokollieren(Exception) {
    FileAppend % "Fehler bei Zeile " Exception.Line ": " Exception.Message "`n"
        , Fehlerprotokoll.txt
    return true
}
</pre>
</div>

</body>
</html>
