<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Clipboard / ClipboardAll - Definition &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Clipboard und ClipboardAll sind interne Variablen, die den aktuellen Inhalt der Windows-Zwischenablage widerspiegeln. ClipboardAll enthält alles von der Zwischenablage wie Bilder und Formatierung." />
<meta name="ahk:equiv-v2" content="lib/A_Clipboard.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>

<body>
<h1>Clipboard und <a href="#ClipboardAll">ClipboardAll</a></h1>

<p><em>Clipboard</em> ist eine interne <a href="../Variables.htm">Variable</a>, die den aktuellen Inhalt der Windows-Zwischenablage enthält, falls dieser in Textform ist. <em><a href="#ClipboardAll">ClipboardAll</a></em> hingegen enthält alles von der Zwischenablage, wie z. B. Bilder und Formatierung.</p>
<p><span class="ver">[v1.1.35+]:</span> <code>A_Clipboard</code> ist ein Alias von <code>Clipboard</code>.</p>
<p id="CopiedFiles">Jede Textzeile in <em>Clipboard</em> endet normalerweise mit einem CR- und LF-Zeichen, die im Skript als <code>`r`n</code> ausgedrückt werden können. Dateien (die beispielsweise mit <kbd>Strg</kbd>+<kbd>C</kbd> kopiert wurden) gelten als Text: Sie werden automatisch in ihren Dateinamen umgewandelt (mit vollständigem Pfad), sobald <em>Clipboard</em> im Skript verwendet wird. Das folgende Beispiel zeigt, wie die Dateien einzeln extrahiert werden können:</p>
<pre><a href="../lib/LoopParse.htm">Loop, parse</a>, clipboard, `n, `r
{
    MsgBox, 4, , Dateinummer %A_Index% ist %A_LoopField%.`n`nWeiter?
    IfMsgBox, No, break
}</pre>
<p>Mit dem <a href="../lib/Sort.htm">Sort</a>-Befehl können die Dateinamen in alphabetischer Reihenfolge sortiert werden. Um die Dateinamen aus der Zwischenablage in eine Datei zu schreiben, verwenden Sie <code><a href="../lib/FileAppend.htm">FileAppend</a>, %clipboard%`r`n, C:\Meine Datei.txt</code>. Mit <a href="../lib/_ClipboardTimeout.htm">#ClipboardTimeout</a> kann man einstellen, wie lange das Skript versuchen soll, die Zwischenablage zu öffnen (wenn die Zwischenablage zum Beispiel von einer anderen Anwendung blockiert wird).</p>
<strong>Einfache Beispiele:</strong>
<pre>clipboard := "eigener Text"   <em>; Ersetzt die Zwischenablage mit neuem Inhalt.</em>
clipboard := ""   <em>; Leert die Zwischenablage.</em>
clipboard := clipboard   <em>; Wandelt jede kopierte Datei, HTML oder anders formatierter Text in Klartext um.</em>
clipboard := clipboard " angefügter Text."   <em>; Fügt etwas Text an die Zwischenablage.</em>
StringReplace, clipboard, clipboard, ABC, DEF, All   <em>; Ersetzt alle Vorkommen von ABC mit DEF (und wandelt die Zwischenablage in Klartext um).</em></pre>

<p><strong>ClipWait verwenden, um die Zuverlässigkeit des Skripts zu verbessern:</strong></p>
<pre>clipboard := ""  <em>; Vorerst leer, damit ClipWait erkennt, wenn der Text angekommen ist.</em>
Send ^c
<a href="../lib/ClipWait.htm">ClipWait</a>  <em>; Wartet, bis die Zwischenablage Text enthält.</em>
MsgBox STRG+C hat folgenden Inhalt in die Zwischenablage kopiert:`n`n%clipboard%</pre>
<h2 id="ClipboardAll">ClipboardAll <span class="headnote">(alles in der Zwischenablage speichern und wiederherstellen)</span></h2>
<p><em>ClipboardAll</em> enthält alles von der Zwischenablage (z. B. Bilder und Formatierung). Diese Variable wird häufig verwendet, um den aktuellen Inhalt der Zwischenablage zu sichern, damit die Zwischenablage vorübergehend für eine andere Operation verwendet werden kann. Sobald die Operation abgeschlossen wurde, kann der originale Inhalt der Zwischenablage wie folgt wiederhergestellt werden:</p>
<pre>ClipSicherung := ClipboardAll   <em>; Speichert die gesamte Zwischenablage in eine beliebige Variable.
; ... hier kann vorübergehend die Zwischenablage anderweitig verwendet werden, z. B. das Einfügen von Unicode-Text mit <a href="../lib/Transform.htm#Unicode">Transform Unicode</a> ...</em>
Clipboard := ClipSicherung   <em>; Originale Zwischenablage wiederherstellen. Beachtet, dass <i>Clipboard</i> verwendet wird (nicht <i>ClipboardAll</i>).</em>
ClipSicherung := ""   <em>; Speicher freigeben, falls die Zwischenablage sehr groß war.</em></pre>
<p><em>ClipboardAll</em> könnte auch in einer Datei gespeichert werden (in diesem Modus wird FileAppend die vorhandene Datei immer überschreiben):</p>
<pre><a href="../lib/FileAppend.htm">FileAppend</a>, %ClipboardAll%, C:\Firmenlogo.clip <em>; Die Dateierweiterung spielt hierbei keine Rolle.</em></pre>
<p>Das folgende Beispiel zeigt, wie die Datei später wieder in die Zwischenablage (oder in eine Variable) geladen werden kann:</p>
<pre><a href="../lib/FileRead.htm">FileRead</a>, Clipboard, <strong>*c</strong> C:\Firmenlogo.clip <em>; Beachtet, dass *c vor dem Dateinamen stehen muss.</em></pre>

<h3 id="limitations">Einschränkungen</h3>
<p>Es gelten einige Einschränkungen bei der direkten Verwendung von <em>ClipboardAll</em>:</p>
<ul>
  <li><em>ClipboardAll</em> ist leer, sobald es nicht wie oben beschrieben verwendet wird.</li>
  <li><em>ClipboardAll</em> wird in <a href="../Variables.htm#comma">kommagetrennten Ausdrücken</a> nicht unterstützt; das heißt, dass es auf einer separaten Zeile zugewiesen werden sollte, wie z. B. <code>ClipSicherung := ClipboardAll</code>.</li>
</ul>
<p>Eine Variable, die binäre Zwischenablagedaten enthält, kann wie folgt genutzt werden:</p>
<ul>
  <li>Legen Sie die Daten wieder in die Zwischenablage, indem Sie sie der <em>Clipboard</em>-Variable zuweisen, wie oben gezeigt.</li>
  <li>Schreiben Sie die Zwischenablagedaten in eine Datei mithilfe von <a href="../lib/FileAppend.htm">FileAppend</a>, wie oben gezeigt.</li>
  <li>Kopieren Sie die Daten in eine andere Variable (oder <a href="../Functions.htm#ByRef">ByRef</a>-Parameter) wie in diesem Beispiel: <code>ClipSicherung2 := ClipSicherung</code>.</li>
  <li>Übergeben Sie die Daten an eine <a href="../Functions.htm">benutzerdefinierte Funktion</a>, entweder <a href="../Functions.htm#ByRef">via Referenz</a> oder in <span class="ver">[v1.0.46+]</span> via Wert.</li>
  <li>Bestimmen Sie die Größe der Daten, indem Sie sie an <a href="../lib/StrLen.htm">StrLen()</a> übergeben, wie <a href="#len">unten</a> beschrieben.</li>
  <li>Vergleichen Sie zwei solcher Variablen unter Verwendung einer altmodischen If-Anweisung, wie <a href="#compare">unten</a> gezeigt.</li>
  <li>Nehmen Sie die <a href="../Variables.htm#amp">Adresse</a> der Variable oder übergeben Sie die Variable selbst an <a href="../lib/NumGet.htm">NumGet</a>, um die Daten zu untersuchen.</li>
</ul>
<p>Es gelten weitere Einschränkungen:</p>
<ul>
  <li>Wenn binäre Zwischenablagendaten einer Variable zugewiesen werden, wird die Variable mit einem versteckten Attribut markiert. Dieses Attribut kann nur durch <a href="../lib/FileRead.htm">FileRead</a> mit der Option <code>*c</code> gesetzt werden, oder durch direkte Zuweisung von <em>ClipboardAll</em> (wie oben gezeigt) oder einer anderen Variable mit dem Attribut.</li>
  <li>Wenn binäre Zwischenablagendaten anders als oben beschrieben verwendet werden, werden diese in der Regel als Text interpretiert und beim ersten Nullzeichen abgeschnitten, das normalerweise am Anfang der Daten steht. Dies geschieht zum Beispiel, wenn man versucht, die Daten von einer Funktion zurückzugeben oder sie einer Eigenschaft oder einem Array-Element zuzuweisen.</li>
  <li>Das Clipboard-Attribut wird entfernt, wenn die Variable freigegeben oder ihr ein anderer Wert zugewiesen wird, selbst mit indirekten Mitteln wie <a href="../lib/StrReplace.htm">StrReplace()</a> oder <a href="../lib/StringReplace.htm">StringReplace</a>.</li>
  <li>Variablen ohne Clipboard-Attribut werden als Text behandelt, wenn sie der <em>Clipboard</em>-Variable zugewiesen oder an FileAppend übergeben werden, sogar wenn die Daten im richtigen Binärformat vorliegen.</li>
</ul>

<h3 id="Notes">Hinweise</h3>
<p>Falls <em>ClipboardAll</em> nicht in der Lage ist, eine oder mehrere Datenobjekte (Formate) von der Zwischenablage abzurufen, werden die Objekte ausgelassen und die restlichen gespeichert.</p>
<p>Mit <a href="../lib/ClipWait.htm">ClipWait</a> kann festgestellt werden, wann die Zwischenablage Daten enthält (wahlweise auch Daten, die kein Text sind).</p>
<p id="len"><a href="../lib/StrLen.htm">StrLen()</a> kann genutzt werden, um die Gesamtgröße einer Variable zu ermitteln, der <em>ClipboardAll</em> zugewiesen wurde. Um die Größe bei den Unicode-Versionen von AutoHotkey abzurufen (in Bytes), muss die Länge mit 2 multipliziert werden. <a href="../Variables.htm#IsUnicode">A_IsUnicode</a> kann verwendet werden, um ANSI- und Unicode-Versionen zu unterstützen. Zum Beispiel: <code>Größe := StrLen(ClipSicherung) * (A_IsUnicode ? 2 : 1)</code>.</p>
<p id="compare">Variablen, denen <em>ClipboardAll</em> zugewiesen wurde, können mittels <a href="../lib/IfEqual.htm">If[Not]Equal</a>, <code>If Var1 = %Var2%</code> oder <code>If Var1 != %Var2%</code> miteinander verglichen werden (aber nicht direkt mit <em>ClipboardAll</em>). Im folgenden Beispiel wird zunächst die Länge jeder Variable überprüft. Falls das nicht reicht, können die Variablen noch wie folgt verglichen werden:</p>
<pre>if ClipSicherung1 != %ClipSicherung2%   <em>; <u>Muss</u> eine IF-Anweisung im alten Stil sein, kein Ausdruck.</em>
    MsgBox Die zwei gespeicherten Zwischenablagen sind unterschiedlich.</pre>
<p>Das Speichern von <em>ClipboardAll</em> in eine Variable wird nicht durch das Speicherlimit von <a href="../lib/_MaxMem.htm">#MaxMem</a> beeinflusst.</p>
<p>Eine intern gespeicherte Zwischenablagedatei besteht aus mehreren Teilen: Die ersten 4 Bytes enthalten den Formattyp, die nächsten 4 Bytes (für 32-Bit) oder 8 Bytes (für 64-Bit) die Datenblockgröße und zum Schluss den Datenblock des Formats. Falls die Zwischenablage mehr als ein Format enthält (dass fast immer der Fall ist), werden diese drei Elemente so oft wiederholt, bis alle Formate enthalten sind. Anschließend endet die Datei mit einem Formattyp (4 Byte groß), wobei jedoch eine 0 enthalten ist.</p>
<p>Bekannte Einschränkung: Sobald <em>ClipboardAll</em> abgerufen wird, während Zellen von MS Excel enthalten sind, kann es passieren, dass in Excel ein Dialogfenster mit "Keine Drucker" angezeigt wird.</p>
<p>Zwischenablage-Programme, die mit AutoHotkey programmiert wurden:</p>
<ul>
  <li>Deluxe Clipboard: Ermöglicht eine unbegrenzte Anzahl an privaten, benannten Zwischenablagen, um einen markierten Text zu kopieren, auszuschneiden, einzufügen, anzuhängen oder auszuschneiden und anzuhängen. <a href="https://www.autohotkey.com/forum/topic2665.html">www.autohotkey.com/forum/topic2665.html</a></li>
  <li>ClipStep: Kontrolliert mehrere Zwischenablagen nur mithilfe von <kbd>Strg</kbd>+<kbd>X</kbd>/<kbd>C</kbd>/<kbd>V</kbd>. <a href="https://www.autohotkey.com/forum/topic4836.html">www.autohotkey.com/forum/topic4836.html</a></li>
</ul>

<h2 id="OnClipboardChange">OnClipboardChange</h2>
<p>Skripte können mittels <a href="../lib/OnClipboardChange.htm#function">OnClipboardChange()</a> oder <a href="../lib/OnClipboardChange.htm#label">OnClipboardChange-Label</a> Änderungen in der Zwischenablage erkennen.</p>

</body>
</html>
