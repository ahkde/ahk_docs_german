<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Catch - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Die Catch-Anweisung bestimmt eine oder mehrere Anweisungen, die ausgeführt werden sollen, wenn während einer Try-Anweisung eine Ausnahme ausgelöst wird." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Catch <span class="ver">[v1.1.04+]</span></h1>

<p>Bestimmt eine oder mehrere Anweisungen, die ausgeführt werden sollen, wenn während einer <a href="Try.htm">Try</a>-Anweisung eine Ausnahme ausgelöst wird.</p>

<pre class="Syntax" style="line-height: 120%">
<span class="func">Catch</span> <span class="optional">, AusgabeVar</span>
    <i>Anweisung</i>
</pre>
<pre class="Syntax" style="line-height: 100%">
<span class="func">Catch</span> <span class="optional">, AusgabeVar</span>
{
    <i>Anweisungen</i>
}
</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p><em>(Optional)</em> Name der Ausgabevariable, in der der Ausnahmewert gespeichert werden soll.</p></dd>

  <dt><i>Anweisung(en)</i></dt>
  <dd><p>Befehle oder Ausdrücke, die ausgeführt werden, wenn eine Ausnahme ausgelöst wird.</p></dd>

</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Jedes <em>Catch</em> muss zu einem darüberliegenden <a href="Try.htm">Try</a> gehören (mit ihm verbunden sein). Ein <em>Catch</em> bezieht sich immer auf das nächst darüberliegende, noch nicht beanspruchte <em>Try</em>, sofern dieses Verhalten nicht mit einem <a href="Block.htm">Block</a> geändert wurde.</p>
<p>Je nach Bedarf kann der <a href="Block.htm#otb">One True Brace (OTB) Style</a> verwendet werden. Zum Beispiel:</p>
<pre>try {
    ...
} catch e {
    ...
}</pre>

<h2 id="RuntimeErrors">Laufzeitfehler</h2>
<p>Eine <em>Try-Catch</em>-Anweisung kann auch zur Behandlung von Laufzeitfehlern verwendet werden. Es gibt zwei Typen von Laufzeitfehlern: solche, die normalerweise <a href="../misc/ErrorLevel.htm">ErrorLevel</a> setzen, und solche, die normalerweise den aktuellen Thread nach einer Fehlermeldung beenden. Ladezeitfehler können nicht behandelt werden, da sie vor dem Ausführen der <em>Try</em>-Anweisung auftreten. Aus Gründen der Abwärtskompatibilität (und in einigen Fällen aus praktischen Gründen) lösen Laufzeitfehler nur dann Ausnahmen aus, wenn gerade ein <em>Try</em>-Block ausgeführt wird. Die meisten Befehle unterstützen die Verwendung von <em>Try-Catch</em>; allerdings wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> weiterhin auf 0 gesetzt, wenn der Befehl erfolgreich ausgeführt wurde.</p>
<p>Der in <em>AusgabeVar</em> gespeicherte Wert (falls vorhanden) ist ein <a href="Throw.htm#Exception">Exception-Objekt</a>.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="Try.htm">Try</a>, <a href="Throw.htm">Throw</a>, <a href="Finally.htm">Finally</a>, <a href="Block.htm">Blöcke</a>, <a href="OnError.htm">OnError()</a></p>

<h2 id="Examples">Beispiele</h2>
<p>Siehe <a href="Try.htm#Examples">Try</a>.</p>

</body>
</html>
