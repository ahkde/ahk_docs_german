<!DOCTYPE HTML>
<html lang="de">
<head>
<title>FileReadLine - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der FileReadLine-Befehl liest eine bestimmte Zeile aus einer Datei und speichert den Text in eine Variable." />
<meta name="ahk:equiv-v2" content="lib/File.htm#ReadLine" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>FileReadLine</h1>

<p>Liest eine bestimmte Zeile aus einer Datei und speichert den Text in eine <a href="../Variables.htm">Variable</a>.</p>

<pre class="Syntax"><span class="func">FileReadLine</span>, AusgabeVar, DateiName, ZeileNummer</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der <a href="../Variables.htm">Ausgabevariable</a>, in der der abgerufene Text gespeichert werden soll.</p></dd>

  <dt>DateiName</dt>
  <dd><p>Name der Datei, auf die zugegriffen werden soll. Wenn kein absoluter Pfad angegeben ist, wird die Datei im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet. Windows- und Unix-Formate werden unterstützt, d.h. die Zeilen der Datei können entweder mit einem Wagenrücklauf und Zeilenvorschub (`r`n) oder nur mit einem Zeilenvorschub (`n) enden.</p></dd>

  <dt>ZeileNummer</dt>
  <dd><p>Zeile, die gelesen werden soll (1 ist die erste Zeile, 2 die zweite usw.). Dieser Parameter kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p>
    <p>Wenn die angegebene Zeilennummer größer als die Anzahl der Zeilen in der Datei ist, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt und der bisherige Inhalt von <em>AusgabeVar</em> beibehalten. Dies geschieht auch, wenn die angegebene Zeilennummer die letzte Zeile ist, diese Zeile aber leer ist und nicht mit einem Zeilenumbruch bzw. Wagenrücklauf-Zeilenvorschub-Paar endet.</p></dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p>Bei Erfolg wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 0 gesetzt. Andernfalls wird ErrorLevel auf 1 gesetzt und der bisherige Inhalt von <em>AusgabeVar</em> beibehalten.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a> wird auf das Ergebnis der Systemfunktion GetLastError() gesetzt.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Dieser Befehl sollte nur verwendet werden, wenn die Datei klein ist oder wenn nur eine einzelne Textzeile benötigt wird. Eine <a href="LoopReadFile.htm">dateilesende Schleife</a> ist performanter als FileReadLine, wenn es darum geht, eine große Anzahl von Zeilen einzeln zu lesen und zu verarbeiten. Mit <a href="FileRead.htm">FileRead</a> kann eine komplette Datei in eine Variable eingelesen werden.</p>
<p>Leer- und Tabulatorzeichen am Anfang und Ende der Zeile werden in die <em>AusgabeVar</em> geschrieben, nicht aber das Zeilenvorschubzeichen (`n) am Ende der Zeile. Um Leer- und Tabulatorzeichen an beiden Enden einer Variable zu entfernen, machen Sie eine Selbstzuweisung, während <a href="AutoTrim.htm">AutoTrim</a> aktiv ist (Standardeinstellung). Zum Beispiel: <code>MeineZeile = %MeineZeile%</code>.</p>
<p>Es können Zeilen mit einer Länge von bis zu 65534 Zeichen gelesen werden. Wenn die Länge einer Zeile dieses Limit überschreitet, können die restlichen Zeichen nicht mit diesem Befehl abgerufen werden (verwenden Sie stattdessen <a href="FileRead.htm">FileRead</a> oder eine <a href="LoopReadFile.htm">dateilesende Schleife</a>).</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="FileOpen.htm">FileOpen()</a>/<a href="File.htm#ReadLine">File.ReadLine()</a>, <a href="FileRead.htm">FileRead</a>, <a href="FileAppend.htm">FileAppend</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="IniRead.htm">IniRead</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Liest eine Textdatei zeilenweise ein. Beachten Sie, dass Sie dasselbe (aber performanter) mit einer <a href="LoopReadFile.htm">dateilesenden Schleife</a> erreichen können.</p>
<pre>Loop
{
    FileReadLine, Zeile, C:\Meine Dokumente\Kontaktliste.txt, %A_Index%
    if ErrorLevel
        break
    MsgBox, 4, , Zeile Nr. %A_Index% ist "%Zeile%".  Weiter?
    IfMsgBox, No
        return
}
MsgBox, Das Ende der Datei wurde erreicht oder es ist ein Problem aufgetreten.
return</pre>
</div>

</body>
</html>
