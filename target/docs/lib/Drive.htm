<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Drive - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Der Drive-Befehl öffnet/schließt ein CD- oder DVD-Laufwerk oder ändert die Bezeichnung eines Laufwerks." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Drive</h1>

<p>Öffnet/schließt ein CD- oder DVD-Laufwerk oder ändert die Bezeichnung eines Laufwerks.</p>
<pre class="Syntax"><span class="func">Drive</span>, <a href="#SubCommands">Unterbefehl</a> <span class="optional">, Wert1, Wert2</span></pre>
<p>Die Parameter <em>Unterbefehl</em>, <em>Wert1</em> und <em>Wert2</em> sind voneinander abhängig und können wie folgt verwendet werden.</p>

<h2 id="SubCommands">Unterbefehle</h2>
<p>Geben Sie für <em>Unterbefehl</em> Folgendes an:</p>
<ul>
    <li><a href="#Label">Label</a>: Ändert die Bezeichnung eines Laufwerks.</li>
    <li><a href="#Lock">Lock</a>: Sperrt die Auswurffunktion eines Laufwerks.</li>
    <li><a href="#Unlock">Unlock</a>: Entsperrt die Auswurffunktion eines Laufwerks.</li>
    <li><a href="#Eject">Eject</a>: Öffnet oder schließt ein CD- oder DVD-Laufwerk.</li>
</ul>

<h3 id="Label">Label</h3>
<p>Ändert die Bezeichnung eines bestimmten Laufwerks.</p>
<pre class="Syntax"><span class="func">Drive</span>, Label, Laufwerk <span class="optional">, NeueBezeichnung</span></pre>
<p><em>Laufwerk</em> ist der Laufwerksbuchstabe, gefolgt von einem Doppelpunkt und optional einem umgekehrten Schrägstrich (UNC-Netzwerkpfade und zugeordnete Laufwerke wären auch möglich). Lässt man <em>NeueBezeichnung</em> weg, bekommt das Laufwerk eine leere Bezeichnung zugewiesen.</p>
<p>Mit dem <a href="DriveGet.htm#Label">Label-Unterbefehl von DriveGet</a> kann die Bezeichnung eines Laufwerks abgerufen werden, z.B. <code>DriveGet, AusgabeVar, Label, C:</code>.</p>

<h3 id="Lock">Lock</h3>
<p>Sperrt die Auswurffunktion eines bestimmten Laufwerks.</p>
<pre class="Syntax"><span class="func">Drive</span>, Lock, Laufwerk</pre>
<p><em>Laufwerk</em> ist der Laufwerksbuchstabe, gefolgt von einem Doppelpunkt und optional einem umgekehrten Schrägstrich (UNC-Netzwerkpfade und zugeordnete Laufwerke wären auch möglich).</p>
<p>Die meisten Laufwerke können nicht gesperrt werden, wenn sie offen sind. Allerdings könnte die Sperrung immer noch erfolgen, nachdem das Laufwerk geschlossen wurde.</p>
<p>Dieser Unterbefehl hat keine Auswirkung auf Laufwerke, die keine Sperrung zulassen (was auf die meisten schreibgeschützten Laufwerke zutrifft).</p>
<p>Mit dem <a href="#Unlock">Unlock-Unterbefehl</a> unten kann ein Laufwerk entsperrt werden. Die Sperrung eines Laufwerks bleibt auch nach Beendigung des verantwortlichen Skripts bestehen. Andere Skripte, Programme oder ein Neustart des Systems können die Sperre wieder aufheben.</p>
<p>Wenn das angegebene Laufwerk nicht existiert oder die Sperrfunktion nicht unterstützt, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt. Andernfalls wird es auf 0 gesetzt.</p>

<h3 id="Unlock">Unlock</h3>
<p>Entsperrt die Auswurffunktion eines bestimmten Laufwerks.</p>
<pre class="Syntax"><span class="func">Drive</span>, Unlock, Laufwerk</pre>
<p><em>Laufwerk</em> ist der Laufwerksbuchstabe, gefolgt von einem Doppelpunkt und optional einem umgekehrten Schrägstrich (UNC-Netzwerkpfade und zugeordnete Laufwerke wären auch möglich).</p>
<p>Dieser Unterbefehl muss mehrmals ausgeführt werden, wenn das Laufwerk mehrmals gesperrt wurde (zumindest bei einigen Laufwerken). Führt man z.B. dreimal <code>Drive, Lock, D:</code> aus, wäre dreimal <code>Drive, Unlock, D:</code> erforderlich, um die Sperre aufzuheben. Genau aus diesem Grund und der Tatsache, dass der gesperrte Zustand eines Laufwerks nicht ermittelt werden kann, ist es ratsam, diesen Zustand in einer <a href="../Variables.htm">Variable</a> zu hinterlegen, um den Überblick zu behalten.</p>

<h3 id="Eject">Eject</h3>
<p>Öffnet oder schließt ein CD- oder DVD-Laufwerk.</p>
<pre class="Syntax"><span class="func">Drive</span>, Eject <span class="optional">, Laufwerk, 1</span></pre>
<p>Um andere Medien- oder Gerätetypen auszuwerfen, schauen Sie sich <a href="#ExDllCall">Beispiel #3</a> im unteren Bereich dieser Seite an.</p>
<p><em>Laufwerk</em> ist der Laufwerksbuchstabe, gefolgt von einem Doppelpunkt und optional einem umgekehrten Schrägstrich. Lässt man <em>Laufwerk</em> weg, wird das Standard-CD/DVD-Laufwerk verwendet. Um das Laufwerk auszufahren/zu öffnen, lassen Sie den letzten Parameter weg. Um das Laufwerk einzufahren/zu schließen, geben Sie 1 im letzten Parameter an, z.B. <code>Drive, Eject, D:, 1</code>.</p>
<p>Während dieser Unterbefehl das Laufwerk ein- oder ausfährt, wartet das Skript. Befindet sich das Laufwerk bereits in der richtigen Position (offen oder geschlossen), wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 0 gesetzt (d.h. "kein Fehler").</p>
<p>Dieser Unterbefehl funktioniert möglicherweise nicht, wenn das angegebene Laufwerk ein Netzlaufwerk oder Nicht-CD/DVD-Laufwerk ist. Bei Misserfolg wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt.</p>
<p>Es ist möglich, den vorherigen Zustand des Laufwerks zu ermitteln. Messen Sie einfach die Zeit, die der Unterbefehl zum Ausführen benötigt. Zum Beispiel schaltet der folgende Hotkey das Laufwerk jeweils in den entgegengesetzten Zustand (offen oder geschlossen):</p>
<pre>#c::
Drive, Eject
<em>; Wurde der Befehl schnell ausgeführt, war das Laufwerk vmtl. schon offen.
; In diesem Fall kann es geschlossen werden:</em>
if (A_TimeSinceThisHotkey &lt; 1000)  <em>; Passen Sie den Wert an, falls nötig.</em>
    Drive, Eject,, 1
return</pre>
<p>Mit <a href="DriveGet.htm">DriveGet</a> kann der Medienstatus eines CD- oder DVD-Laufwerks (läuft, gestoppt, offen, usw.) ermittelt werden.</p>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="DriveGet.htm">DriveGet</a>, <a href="DriveSpaceFree.htm">DriveSpaceFree</a></p>

<h2 id="Examples">Beispiele</h2>

<div class="ex" id="ExLabel">
<p><a class="ex_number" href="#ExLabel"></a> Ändert die Bezeichnung des D-Laufwerks.</p>
<pre>Drive, Label, D:, Backup-Laufwerk</pre>
</div>

<div class="ex" id="ExRetract">
<p><a class="ex_number" href="#ExRetract"></a> Schließt das Standard-CD/DVD-Laufwerk.</p>
<pre>Drive, Eject,, 1</pre>
</div>

<div class="ex" id="ExDllCall">
<p><a class="ex_number" href="#ExDllCall"></a> Dies ist eine alternative Auswurfmethode, die nicht nur für CD/DVD-Laufwerke, sondern auch für andere Medien-/Gerätetypen funktioniert. Passen Sie in der ersten Zeile den gewünschten Laufwerksbuchstaben an (alle anderen Zeilen können ignoriert werden).</p>
<pre>LaufwBuchst := "I:"  <em>; Der Laufwerksbuchstabe zum Auswerfen.</em>

hVolume := DllCall("CreateFile"
    , "Str", "\\.\" . LaufwBuchst
    , "UInt", 0x80000000 | 0x40000000  <em>; GENERIC_READ | GENERIC_WRITE</em>
    , "UInt", 0x1 | 0x2  <em>; FILE_SHARE_READ | FILE_SHARE_WRITE</em>
    , "UInt", 0
    , "UInt", 0x3  <em>; OPEN_EXISTING</em>
    , "UInt", 0, "UInt", 0)
if (hVolume != -1)
{
    DllCall("DeviceIoControl"
        , "UInt", hVolume
        , "UInt", 0x2D4808   <em>; IOCTL_STORAGE_EJECT_MEDIA</em>
        , "UInt", 0, "UInt", 0, "UInt", 0, "UInt", 0
        , "UIntP", dwBytesReturned  <em>; Unbenutzt.</em>
        , "UInt", 0)
    DllCall("CloseHandle", "UInt", hVolume)
}</pre>
</div>
</body>
</html>
