<!DOCTYPE HTML>
<html lang="de">
<head>
<title>WinGetText - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Der WinGetText-Befehl ermittelt den Text eines bestimmten Fensters." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>WinGetText</h1>

<p>Ermittelt den Text eines bestimmten Fensters.</p>

<pre class="Syntax"><span class="func">WinGetText</span>, AusgabeVar <span class="optional">, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Ausgabevariable, in der der abgerufene Text gespeichert werden soll.</p></dd>

  <dt>FensterTitel</dt>
  <dd><p>Der Titel oder andere Möglichkeiten zum Identifizieren des Zielfensters. Weitere Informationen finden Sie unter <a href="../misc/WinTitle.htm">FensterTitel-Parameter</a>.</p></dd>

  <dt>FensterText</dt>
  <dd><p>Eine Zeichenkette, die in einem der Textelemente des Zielfensters enthalten ist (eventuell vorhandene Textelemente können mit dem internen Tool Window Spy aufgedeckt werden). Versteckte Textelemente werden nur erkannt, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> eingeschaltet ist.</p></dd>

  <dt>IgnoriereTitel</dt>
  <dd><p>Alle Fenster, die diesen Wert in ihren Titeln enthalten, werden ignoriert.</p></dd>

  <dt>IgnoriereText</dt>
  <dd><p>Alle Fenster, die diesen Wert in ihren Textelementen enthalten, werden ignoriert.</p></dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<h2 id="Remarks">Bemerkungen</h2>
<p>Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> leer gemacht.</p>
<p>Der ermittelte Text ist generell das gleiche, was das interne Tool Window Spy für dieses Fenster anzeigt. Wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> ausgeschaltet wurde, werden versteckte Texte in <em>AusgabeVar</em> weggelassen.</p>
<p>Jedes Textelement endet mit einem CR- und LF-Zeilenumbruchszeichen, die im Skript als `r`n dargestellt werden können. Um Zeilen oder Teilzeichenketten einzeln zu extrahieren, verwenden Sie Befehle oder interne Funktionen wie <a href="InStr.htm">InStr()</a> und <a href="SubStr.htm">SubStr()</a>. Eine <a href="LoopParse.htm">parsende Schleife</a> kann auch genutzt werden, um Zeilen oder Worte einzeln durchzugehen.</p>
<p>Wenn der abgerufene Text abgeschnitten (unvollständig) zu sein scheint, können Sie versuchen, <code><a href="VarSetCapacity.htm">VarSetCapacity</a>(AusgabeVar, 55)</code> vor WinGetText zu setzen [ersetzen Sie 55 mit einer Zeichenlänge, die wesentlich länger ist als der abgeschnittene Text]. Dies muss in der Regel getan werden, wenn AutoHotkey die Ausgabevariable für den Text zu klein macht, weil die Anwendung, deren Text abgerufen werden soll, nur sporadisch oder gar nicht auf die WM_GETTEXTLENGTH-Meldung reagiert.</p>
<p>Die Menge des abgerufenen Textes ist auf die maximale Kapazität einer Variable beschränkt (die via <a href="_MaxMem.htm">#MaxMem</a>-Direktive geändert werden kann). Demzufolge verbraucht dieser Befehl sehr viel Arbeitsspeicher, falls das Zielfenster eine große Menge an Text beinhaltet (z. B. ein Editor, in dem ein großes Dokument offen ist). Um das zu verhindern, verwenden Sie stattdessen <a href="ControlGetText.htm">ControlGetText</a>, um nur bestimmte Bereiche des Fenstertextes abzurufen. In allen Fällen kann der Speicher einer Variable später wieder freigegeben werden, indem man ihr einen leeren Wert zuweist, z. B. <code>AusgabeVar := ""</code>.</p>
<p>Um eine Liste aller Steuerelemente in einem Fenster abzurufen, folgen Sie diesem Beispiel: <code><a href="WinGet.htm">WinGet</a>, AusgabeVar, ControlList, FensterTitel</code>.</p>
<p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Versteckte Fenster werden nur erkannt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="ControlGetText.htm">ControlGetText</a>, <a href="WinGetActiveStats.htm">WinGetActiveStats</a>, <a href="WinGetActiveTitle.htm">WinGetActiveTitle</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetPos.htm">WinGetPos</a>, <a href="_MaxMem.htm">#MaxMem</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Öffnet den Taschenrechner, wartet, bis er existiert, und ermittelt und meldet seinen Text.</p>
<pre>Run, Calc.exe
WinWait, Rechner
WinGetText, Text <em>; Verwendet das von WinWait gefundene Fenster.</em>
MsgBox, Der Text ist:`n%Text%</pre>
</div>

</body>
</html>
