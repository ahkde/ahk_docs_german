<!DOCTYPE HTML>
<html lang="de">
<head>
<title>WinGetText - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Der WinGetText-Befehl ruft den Text eines bestimmten Fensters ab." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>WinGetText</h1>

<p>Ruft den Text eines bestimmten Fensters ab.</p>

<pre class="Syntax"><span class="func">WinGetText</span>, AusgabeVar <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Ausgabevariable, in der der abgerufene Text gespeichert werden soll.</p></dd>

  <dt>FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</dt>
  <dd>
    <p>Wenn jeder dieser Parameter leer ist oder weggelassen wird, wird das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a> verwendet. Andernfalls geben Sie für <em>FensterTitel</em> einen <a href="../misc/WinTitle.htm">Fenstertitel oder andere Kriterien</a> zur Identifizierung des Zielfensters und/oder für <em>FensterText</em> eine Teilzeichenkette aus einem Textelement des Zielfensters an (Textelemente können mit dem internen Tool "Window Spy" in Erfahrung gebracht werden).</p>
    <p><em>AusnahmeTitel</em> und <em>AusnahmeText</em> können verwendet werden, um ein oder mehrere Fenster anhand ihres Titels oder Textes auszuschließen. Ihre Angabe ähnelt der von <em>FensterTitel</em> und <em>FensterText</em>, außer dass <em>AusnahmeTitel</em> keine anderen Kriterien als den Fenstertitel erkennt.</p>
    <p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Standardmäßig werden versteckte Fenster nicht erkannt und versteckte Textelemente erkannt, was mit <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> und <a href="DetectHiddenText.htm">DetectHiddenText</a> geändert werden kann. Standardmäßig muss ein Fenstertitel mit dem angegebenen <em>FensterTitel</em> oder <em>AusnahmeTitel</em> beginnen, um eine Übereinstimmung zu sein, was mit <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> geändert werden kann.</p>
  </dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<h2 id="Remarks">Bemerkungen</h2>
<p>Wenn kein Fenster gefunden wurde, wird <em>AusgabeVar</em> leer gemacht.</p>
<p>Der abgerufene Text ist grundsätzlich derselbe wie der, den das interne Tool "Window Spy" für dieses Fenster anzeigt. Wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> jedoch ausgeschaltet wurde, werden versteckte Texte in <em>AusgabeVar</em> weggelassen.</p>
<p>Jedes Textelement endet mit einem Wagenrücklauf-Zeilenvorschub-Paar (`r`n). Um Zeilen oder Teilzeichenketten einzeln zu extrahieren, verwenden Sie Befehle oder interne Funktionen wie <a href="InStr.htm">InStr()</a> und <a href="SubStr.htm">SubStr()</a>. Es kann auch eine <a href="LoopParse.htm">parsende Schleife</a> verwendet werden, um Zeilen oder Wörter einzeln durchzugehen.</p>
<p>Wenn der abgerufene Text gekürzt (unvollständig) ist, versuchen Sie es mit <code><a href="VarSetCapacity.htm">VarSetCapacity</a>(AusgabeVar, 55)</code> vor WinGetText (ersetzen Sie 55 mit einer Zahl, die wesentlich größer ist als die Länge des gekürzten Textes). Dies ist in der Regel erforderlich, wenn AutoHotkey die Ausgabevariable für den Text zu klein macht, weil die Anwendung, deren Text abgerufen werden soll, nur sporadisch oder gar nicht auf die WM_GETTEXTLENGTH-Meldung reagiert.</p>
<p>Die Menge des abgerufenen Textes ist auf die maximale Kapazität einer Variable beschränkt (was mit der <a href="_MaxMem.htm">#MaxMem</a>-Direktive geändert werden kann). Dieser Befehl kann daher sehr viel Arbeitsspeicher beanspruchen, wenn das Zielfenster eine große Menge an Text enthält (z.B. wenn ein großes Dokument in einem Texteditor geöffnet wurde). Um dies zu vermeiden, verwenden Sie stattdessen <a href="ControlGetText.htm">ControlGetText</a>, um nur bestimmte Bereiche des Fenstertextes abzurufen. In allen Fällen kann der Speicher einer Variable später wieder freigegeben werden, indem ihr ein leerer Wert zugewiesen wird, d.h. <code>AusgabeVar := ""</code>.</p>
<p><code>SetTitleMatchMode Slow</code> muss nicht verwendet werden, da WinGetText den Text immer im langsamen Modus abruft (dieser Modus funktioniert mit viel mehr Steuerelementen).</p>
<p>Mit <a href="WinGet.htm#ControlList">WinGet ControlList</a> kann eine Liste von Steuerelementen in einem Fenster abgerufen werden.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="ControlGetText.htm">ControlGetText</a>, <a href="WinGetActiveStats.htm">WinGetActiveStats</a>, <a href="WinGetActiveTitle.htm">WinGetActiveTitle</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetPos.htm">WinGetPos</a>, <a href="_MaxMem.htm">#MaxMem</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Öffnet den Taschenrechner, wartet bis er existiert, und ermittelt und meldet seinen Text.</p>
<pre>Run, Calc.exe
WinWait, Rechner
WinGetText, Text <em>; Verwendet das von WinWait gefundene Fenster.</em>
MsgBox, Der Text ist:`n%Text%</pre>
</div>

</body>
</html>
