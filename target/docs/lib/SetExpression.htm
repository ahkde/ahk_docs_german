<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Var := Ausdruck - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content='Die Anweisung "Var := Ausdruck" wertet einen Ausdruck aus und speichert das Ergebnis in eine Variable.' />
<meta name="ahk:equiv-v2" content="Variables.htm#AssignOp" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Var := Ausdruck</h1>

<p>Wertet einen Ausdruck aus und speichert das Ergebnis in eine <a href="../Variables.htm">Variable</a>.</p>

<pre class="Syntax">Var := Ausdruck</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Var</dt>
  <dd><p>Name der <a href="../Variables.htm">Ausgabevariable</a>, in der das Ergebnis von <em>Ausdruck</em> gespeichert werden soll.</p></dd>

  <dt>Ausdruck</dt>
  <dd><p>Informationen finden Sie unter <a href="../Variables.htm#Expressions">Ausdrücke</a> und bei den Beispielen unten.</p></dd>

</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Der Doppelpunkt-Gleich-Operator (:=) wurde optimiert, um genauso schnell wie der Gleich-Operator (=) zu sein, zumindest für einfache Fälle wie den folgenden:</p>
<pre>x := y  <em>; Gleiche Performanz wie x = %y%</em>
x := 5  <em>; Gleiche Performanz wie x = 5</em>
x := "direkt geschriebene Zeichenkette"  <em>; Gleiche Performanz wie x = direkt geschriebene Zeichenkette</em></pre>
<p>Die Wörter <strong>True</strong> und <strong>False</strong> sind interne Variablen, die 1 bzw. 0 enthalten. Diese können verwendet werden, um die Lesbarkeit eines Skripts zu verbessern. Zum Beispiel:</p>
<pre>GroßKleinSensitiv := false
SucheFortsetzen := true</pre>
<p>Es ist möglich, ein <a href="../misc/Arrays.htm#pseudo">Pseudo-Array</a> mit dieser Anweisung und allen anderen, die eine Ausgabevariable akzeptieren, zu erstellen. Dies geschieht durch Anfügen einer Variablenreferenz an den Namen der Ausgabevariable, z.B. <code>Array%i% := Var/100 + 5</code>. Weitere Informationen finden Sie unter <a href="../misc/Arrays.htm">Arrays</a>.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="../Variables.htm#Expressions">Ausdrücke</a>, <a href="IfExpression.htm">If (Ausdruck)</a>, <a href="../Functions.htm">Funktionen</a>, <a href="SetEnv.htm">SetEnv</a>, <a href="EnvSet.htm">EnvSet</a>, <a href="EnvAdd.htm">EnvAdd</a>, <a href="EnvSub.htm">EnvSub</a>, <a href="EnvMult.htm">EnvMult</a>, <a href="EnvDiv.htm">EnvDiv</a>, <a href="IfEqual.htm">If (Legacy)</a>, <a href="../misc/Arrays.htm">Arrays</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExString">
<p><a class="ex_number" href="#ExString"></a> Weist einer Variable eine direkt geschriebene Zeichenkette zu.</p>
<pre>Var := "direkt geschriebene Zeichenkette"</pre>
</div>

<div class="ex" id="ExNumber">
<p><a class="ex_number" href="#ExNumber"></a> Weist einer Variable eine Zahl zu.</p>
<pre>Var := 3</pre>
</div>

<div class="ex" id="ExMath">
<p><a class="ex_number" href="#ExMath"></a> Berechnet den Nettopreis und speichert das Ergebnis in <var>Var</var>.</p>
<pre>Var := Preis * (1 - Rabatt/100)</pre>
</div>

<div class="ex" id="ExBoolean">
<p><a class="ex_number" href="#ExBoolean"></a> Ermittelt den Wahrheitswert eines Ausdrucks und speichert das Ergebnis (1 für wahr oder 0 für falsch) in <var>Abgeschlossen</var>.</p>
<pre>Abgeschlossen := not Fertig or A_Index &gt; 100
if not Abgeschlossen
{
    FileAppend, %NeuerText%`n, %ZielDatei%
    return
}
else
    ExitApp</pre>
</div>

</body>
</html>
