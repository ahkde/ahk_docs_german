<!DOCTYPE HTML>
<html lang="de">
<head>
<title>NumGet() - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Die NumGet-Funktion gibt eine binäre Nummer zurück, die auf einer bestimmten Adresse + Offset zu finden ist." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>NumGet()</h1>
<p>Gibt eine binäre Nummer zurück, die auf einer bestimmten Adresse + Offset zu finden ist.</p>
<pre class="Syntax">Nummer := <span class="func">NumGet</span>(VarOderAdresse <span class="optional">, Offset := 0</span><span class="optional">, Typ := "UPtr"</span>)</pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>VarOderAdresse</dt>
  <dd>
		<p>Eine Speicheradresse oder Variable. Wenn <em>VarOderAdresse</em> eine Variable wie <code>MeineVar</code> ist, wird die Adresse des Zeichenkettenpuffers der Variable verwendet. Im Prinzip ist dies das gleiche wie, als würde man <code>&amp;MeineVar</code> übergeben, allerdings wird durch Weglassen von "&amp;" eine bessere Leistung erzielt und sichergestellt, dass die Zieladresse + Offset <a href="VarSetCapacity.htm">gültig</a> ist.</p>
		<p><strong>Übergeben Sie keine Variablenreferenz</strong>, wenn die Variable die Zieladresse <em>enthält</em>; übergeben Sie in diesem Fall einen Ausdruck wie <code>MeineVar+0</code>.</p>
	</dd>

  <dt>Offset</dt>
  <dd><p>Eine Zahl (in Bytes), die mit <em>VarOderAdresse</em> addiert wird, um die Zieladresse zu bestimmen.</p></dd>

  <dt>Type</dt>
  <dd>
    <p>Wenn dieser Parameter weggelassen wird oder leer ist, wird standardmäßig UPtr verwendet. Ansonsten können Sie UInt, Int, Int64, Short, UShort, Char, UChar, Double, Float, Ptr oder UPtr angeben.</p>
    <p><em>Vorzeichenlose</em> 64-Bit-Integer werden nicht unterstützt, da der native Integer-Typ von AutoHotkey "Int64" ist. Um mit Zahlen größer gleich 0x8000000000000000 umzugehen, sollten Sie auf das U-Präfix verzichten und negative Werte als große Integer (Int64) behandeln. Ein als UInt64 gedachter Int64-Wert von -1 ist in Wirklichkeit 0xFFFFFFFFFFFFFFFF. Bei 64-Bit-Versionen ist UPtr äquivalent zu Int64.</p>
    <p>Diese Typen müssen, im Gegensatz zu den Typen von DllCall(), in Anführungszeichen gesetzt werden, wenn sie direkt geschriebene Zeichenketten sein sollen.</p>
    <p>Um mehr darüber zu erfahren, siehe <a href="DllCall.htm#types">DllCall-Typen</a>.</p>
  </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Ist die Zieladresse ungültig, wird eine leere Zeichenkette zurückgegeben. Allerdings ist es möglich, dass einige ungültige Adressen nicht als solches erkannt werden, was zu unvorhersehbaren Verhalten führen könnte.</p>
<p>Ansonsten wird eine Nummer zurückgegeben, die auf der angegebenen Adresse + Offset zu finden ist.</p>

<h2 id="General_Remarks">Allgemeine Bemerkungen</h2>
<p>Sind nur zwei Parameter vorhanden, kann der zweite Parameter entweder <em>Offset</em> oder <em>Typ</em> sein. Zum Beispiel wäre <code>NumGet(var, "int")</code> zulässig.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="NumPut.htm">NumPut()</a>, <a href="DllCall.htm">DllCall()</a>, <a href="VarSetCapacity.htm">VarSetCapacity()</a></p>


</body>
</html>
