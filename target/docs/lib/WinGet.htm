<!DOCTYPE HTML>
<html lang="de">
<head>
<title>WinGet - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Der WinGet-Befehl ruft die eindeutige ID, Prozess-ID oder den Prozessnamen eines bestimmten Fensters oder eine Liste seiner Steuerelemente ab." />
<meta name="ahk:equiv-v2" content="lib/Win.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>WinGet</h1>

<p>Ruft die eindeutige ID, Prozess-ID oder den Prozessnamen eines bestimmten Fensters oder eine Liste seiner Steuerelemente ab. Kann auch eine Liste aller Fenster gemäß bestimmter Kriterien abrufen.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar <span class="optional">, <a href="#SubCommands">Unterbefehl</a>, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>

<h2 id="Parameters">Parameter</h2>
<dl>
  <dt>AusgabeVar</dt>
  <dd>Name der Ausgabevariable, in der das Ergebnis von <em>Unterbefehl</em> gespeichert werden soll.</dd>

  <dt>Unterbefehl</dt>
  <dd>Die Operation, die durchgeführt werden soll. Wenn dieser Parameter leer ist, wird standardmäßig der <a href="#ID">ID</a>-Unterbefehl verwendet. Siehe <a href="#SubCommands">Unterbefehle</a>.</dd>

  <dt>FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</dt>
  <dd>
    <p>Wenn jeder dieser Parameter leer ist oder weggelassen wird, wird das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a> verwendet (außer bei den Unterbefehlen <a href="#Count">Count</a> und <a href="#List">List</a>). Andernfalls geben Sie für <em>FensterTitel</em> ein <a href="../misc/WinTitle.htm">Fenstertitel oder andere Kriterien</a> zur Identifizierung des Zielfensters und/oder für <em>FensterText</em> eine Teilzeichenkette aus einem Textelement des Zielfensters an (Textelemente können mit dem internen Tool "Window Spy" aufgedeckt werden). Versteckte Textelemente werden erkannt, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> eingeschaltet wurde. Fenster, deren Titel oder Texte <em>AusnahmeTitel</em> bzw. <em>AusnahmeText</em> enthalten, werden ignoriert.</p>
  </dd>
</dl>

<h2 id="SubCommands">Unterbefehle</h2>
<p>Geben Sie für <em>Unterbefehl</em> Folgendes an:</p>
<ul>
    <li><a href="#ID">ID</a>: Ruft die eindeutige ID eines Fensters ab.</li>
    <li><a href="#IDLast">IDLast</a>: Ruft die eindeutige ID des letzten/untersten Fensters bei mehr als einem Fund ab.</li>
    <li><a href="#PID">PID</a>: Ruft die Prozess-ID eines Fensters ab.</li>
    <li><a href="#ProcessName">ProcessName</a>: Ruft den Namen des Prozesses eines Fensters ab.</li>
    <li><a href="#ProcessPath">ProcessPath</a> <span class="ver">[v1.1.01+]</span>: Ruft den kompletten Pfad und Namen des Prozesses eines Fensters ab.</li>
    <li><a href="#Count">Count</a>: Ruft die Anzahl existierender Fenster gemäß den Titel/Text-Parametern ab.</li>
    <li><a href="#List">List</a>: Ruft die eindeutigen IDs aller existierenden Fenster gemäß den Titel/Text-Parametern ab.</li>
    <li><a href="#MinMax">MinMax</a>: Ruft eine Zahl ab, die angibt, ob ein Fenster minimiert oder maximiert ist.</li>
    <li><a href="#ControlList">ControlList</a>: Ruft die Namen aller Steuerelemente in einem Fenster ab.</li>
    <li><a href="#ControlListHwnd">ControlListHwnd</a> <span class="ver">[v1.0.43.06+]</span>: Ruft die eindeutigen IDs aller Steuerelemente eines Fensters ab.</li>
    <li><a href="#Transparent">Transparent</a>: Ruft die Transparenzstärke eines Fensters ab.</li>
    <li><a href="#TransColor">TransColor</a>: Ruft die Farbe ab, die in einem Fenster als transparent markiert ist.</li>
    <li><a href="#Style">Style</a>: Ruft den Style eines Fensters als 8-stellige Hexadezimalzahl ab.</li>
    <li><a href="#ExStyle">ExStyle</a>: Ruft den erweiterten Style eines Fensters als 8-stellige Hexadezimalzahl ab.</li>
</ul>

<h3 id="ID">ID</h3>
<p>Ruft die eindeutige ID eines Fensters ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, ID <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Auch bekannt als <a href="ControlGet.htm#Hwnd">Window Handle (HWND)</a>. Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> leer gemacht. Die Funktionen <a href="WinExist.htm">WinExist()</a> und <a href="WinActive.htm">WinActive()</a> können auch verwendet werden, um die ID eines Fensters zu ermitteln. Zum Beispiel wäre <code>WinExist("A")</code> ein schneller Weg, die ID des aktiven Fensters abzurufen. Mit <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a> oder <a href="MouseGetPos.htm">MouseGetPos</a> können Sie die HWND-Nummer eines Steuerelements abrufen (um sie z.B. für <a href="PostMessage.htm">Post/SendMessage</a> oder <a href="DllCall.htm">DllCall</a> zu verwenden).</p>

<h3 id="IDLast">IDLast</h3>
<p>Ruft die eindeutige ID des letzten/untersten Fensters bei mehr als einem Fund ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, IDLast <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Auch bekannt als <a href="ControlGet.htm#Hwnd">Window Handle (HWND)</a>. Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> leer gemacht. Wenn nur eine Übereinstimmung vorhanden ist, verhält sich dieser Unterbefehl wie der <a href="#ID">ID</a>- Unterbefehl. Dieses Konzept ist vergleichbar mit dem, das von <a href="WinActivateBottom.htm">WinActivateBottom</a> verwendet wird.</p>

<h3 id="PID">PID</h3>
<p>Ruft die <a href="Process.htm">Prozess-ID-Nummer</a> eines Fensters ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, PID <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> leer gemacht.</p>

<h3 id="ProcessName">ProcessName</h3>
<p>Ruft den Namen des Prozesses eines Fensters ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, ProcessName <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Zum Beispiel wäre das "notepad.exe". Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> leer gemacht.</p>

<h3 id="ProcessPath">ProcessPath <span class="ver">[v1.1.01+]</span></h3>
<p>Ruft den kompletten Pfad und Namen des Prozesses eines Fensters ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, ProcessPath <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Zum Beispiel wäre das "C:\Windows\System32\notepad.exe". Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> leer gemacht.</p>

<h3 id="Count">Count</h3>
<p>Ruft die Anzahl existierender Fenster gemäß den Titel/Text-Parametern ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, Count <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> auf 0 gesetzt. Um die Anzahl aller Fenster im Betriebssystem zu ermitteln, müssen Sie alle vier Titel-/Text-Parameter weglassen. Versteckte Fenster werden nur mitgezählt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>

<h3 id="List">List</h3>
<p>Ruft die eindeutigen IDs aller existierenden Fenster gemäß den Titel/Text-Parametern ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, List <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Um alle Fenster des gesamten Systems abzurufen, müssen Sie alle vier Titel-/Text-Parameter weglassen. Jede ID-Nummer wird in eine Variable gespeichert, deren Name mit dem Eigennamen von <em>AusgabeVar</em> beginnt (um einen <a href="../misc/Arrays.htm#pseudo">Pseudo-Array</a> zu formen). <em>AusgabeVar</em> selbst wird auf die Anzahl der abgerufenen Elemente gesetzt (0, wenn keine gefunden werden). Wenn <em>AusgabeVar</em> beispielsweise MeinArray wäre und gäbe es zwei übereinstimmende Fenster, würde MeinArray1 auf die ID des ersten Fensters, MeinArray2 auf die ID des zweiten Fensters und MeinArray selbst auf 2 gesetzt werden. Die Fenster werden von oben nach unten abgerufen (entsprechend der Tatsache, wie sie auf dem Desktop gestapelt sind). Versteckte Fenster werden nur mitgezählt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist. Um innerhalb einer <a href="../Functions.htm">Funktion</a> ein Pseudo-Array global statt lokal zu machen, <a href="../Functions.htm#Global">deklarieren</a> Sie MeinArray als globale Variable, bevor Sie diesen Befehl verwenden (das Gegenteil davon gilt für <a href="../Functions.htm#AssumeGlobal">Assume-Global</a>-Funktionen). Oft ist es auch notwendig, jede Variable in diesem Satz einzeln zu deklarieren, da ein <a href="../Functions.htm#ArrayConfusion">häufiger Anlass zu Verwirrung</a> vorliegt.</p>

<h3 id="MinMax">MinMax</h3>
<p>Ruft eine Zahl ab, die angibt, ob ein Fenster minimiert oder maximiert ist.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, MinMax <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p><em>AusgabeVar</em> wird leer gemacht, wenn keine passenden Fenster gefunden werden, andernfalls ist eine der folgenden Zahlen enthalten:</p>
<ul>
  <li>-1: Das Fenster ist minimiert (<a href="WinRestore.htm">WinRestore</a> kann die Minimierung aufheben).</li>
  <li>1: Das Fenster ist maximiert (<a href="WinRestore.htm">WinRestore</a> kann die Maximierung aufheben).</li>
  <li>0: Das Fenster ist weder minimiert noch maximiert.</li>
</ul>

<h3 id="ControlList">ControlList</h3>
<p>Ruft die Namen aller Steuerelemente in einem Fenster ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, ControlList <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Falls keine passenden Fenster gefunden werden oder keine Steuerelemente im Fenster vorhanden sind, wird <em>AusgabeVar</em> leer gemacht. Andernfalls wird eine Liste zurückgegeben, die die ClassNN-Bezeichnung von jedem Steuerelement enthält (ClassNN ist der Klassenname des Steuerelements, gefolgt der Reihenfolgenummer innerhalb des übergeordneten Fensters, wie im internen Tool "Window Spy" angezeigt).</p>
<p>Jedes Element außer dem letzten endet mit einem LF-Zeichen (`n). <a href="#ExControlList">Beispiel #3</a> im letzten Abschnitt zeigt, wie eine <a href="LoopParse.htm">parsende Schleife</a> genutzt werden kann, um die Steuerelementnamen einzeln durchzugehen.</p>
<p>Steuerelemente werden nach ihrer Z-Reihenfolge sortiert, was üblicherweise der Navigation via <kbd>Tab</kbd> entspricht, sofern vom Fenster unterstützt.</p>

<h3 id="ControlListHwnd">ControlListHwnd <span class="ver">[v1.0.43.06+]</span></h3>
<p>Ruft die eindeutigen IDs aller Steuerelemente eines Fensters ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, ControlListHwnd <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Falls keine passenden Fenster gefunden werden oder keine Steuerelemente im Fenster vorhanden sind, wird <em>AusgabeVar</em> leer gemacht. Andernfalls ist jede eindeutige ID die <a href="ControlGet.htm#Hwnd">HWND-Nummer</a> des Steuerelements. Jedes Element außer dem letzten endet mit einem LF-Zeichen (`n).</p>
<p>Steuerelemente werden nach ihrer Z-Reihenfolge sortiert, was üblicherweise der Navigation via <kbd>Tab</kbd> entspricht, sofern vom Fenster unterstützt.</p>

<h3 id="Transparent">Transparent</h3>
<p>Ruft die Transparenzstärke eines Fensters ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, Transparent <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Mit <a href="WinSet.htm">WinSet</a> kann ein Fenster transparent gemacht werden. <em>AusgabeVar</em> wird leer gemacht, wenn: 1) das Betriebssystem älter als Windows XP ist; 2) keine passenden Fenster gefunden werden; 3) das Fenster nicht transparent ist; oder 4) andere Bedingungen auftreten (durch das Verhalten des Betriebssystems), z.B. wenn das transparent gemachte Fenster minimiert, wiederhergestellt und/oder skaliert wurde. Andernfalls wird eine Zahl zwischen 0 und 255 gespeichert - 0 wäre ein durchsichtiges Fenster und 255 ein undurchsichtiges Fenster. Zum Beispiel:</p>
<pre>MouseGetPos,,, MausFenster
WinGet, Transparenz, Transparent, ahk_id %MausFenster%  <em>; Transparenz eines Fensters unterhalb des Mauszeigers.</em></pre>

<h3 id="TransColor">TransColor</h3>
<p>Ruft die Farbe ab, die in einem Fenster als transparent markiert ist.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, TransColor <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Mit <a href="WinSet.htm#TransColor">WinSet</a> kann eine Farbe als transparent markiert werden. <em>AusgabeVar</em> wird leer gemacht, wenn: 1) das Betriebssystem älter als Windows XP ist; 2) keine passenden Fenster gefunden werden; 3) das Fenster keine transparente Farbe hat; oder 4) andere Bedingungen auftreten (durch das Verhalten des Betriebssystems), z.B. wenn das transparent gemachte Fenster minimiert, wiederhergestellt und/oder skaliert wurde. Andernfalls wird eine 6-stellige hexadezimale RGB-Farbe gespeichert (z.B. 0x00CC99). Zum Beispiel:</p>
<pre>MouseGetPos,,, MausFenster
WinGet, TransFarbe, TransColor, ahk_id %MausFenster%  <em>; Transparente Farbe eines Fensters unterhalb des Mauszeigers.</em></pre>

<h3 id="Style">Style</h3>
<p>Ruft den Style eines Fensters als 8-stellige Hexadezimalzahl ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, Style <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> leer gemacht. Das folgende Beispiel stellt fest, ob ein Fenster den WS_DISABLED-Style hat:</p>
<pre>WinGet, Style, Style, Mein Fenstertitel
if (Style &amp; 0x8000000)  <em>; 0x8000000 ist WS_DISABLED.</em>
  MsgBox Das Fenster ist deaktiviert.</pre>
<p>Einige Styles finden Sie unter <a href="../misc/Styles.htm">Fenster- und Steuerelement-Styles</a>.</p>

<h3 id="ExStyle">ExStyle</h3>
<p>Ruft den erweiterten Style eines Fensters als 8-stellige Hexadezimalzahl ab.</p>
<pre class="Syntax"><span class="func">WinGet</span>, AusgabeVar, ExStyle <span class="optional">, FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</span></pre>
<p>Wenn keine passenden Fenster gefunden werden, wird <em>AusgabeVar</em> leer gemacht. Das folgende Beispiel stellt fest, ob ein Fenster den WS_EX_TOPMOST-Style hat (immer im Vordergrund):</p>
<pre>WinGet, ExStyle, ExStyle, Mein Fenstertitel
if (ExStyle &amp; 0x8)  <em>; 0x8 ist WS_EX_TOPMOST.</em>
   MsgBox Das Fenster ist immer im Vordergrund.</pre>
<p>Einige Styles finden Sie unter <a href="../misc/Styles.htm">Fenster- und Steuerelement-Styles</a>.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Die ID-Nummer eines Fensters bleibt nur zu dessen Lebzeiten gültig. Mit anderen Worten: Wenn man eine Anwendung neu starten würde, bekämen all ihre Fenster neue ID-Nummern.</p>
<p>Alle ID-Nummern, die von diesem Befehl abgerufen werden, sind numerisch (ohne das Präfix "ahk_id") und werden im hexadezimalen Format gespeichert, egal welche <a href="SetFormat.htm">SetFormat</a>-Einstellung gerade aktiv ist.</p>
<p>Die ID des Fensters, das sich unter dem Mauszeiger befindet, kann mit <a href="MouseGetPos.htm">MouseGetPos</a> abgerufen werden.</p>
<p>Zwar sind die ID-Nummern zurzeit vorzeichenlose 32-Bit-Integer, allerdings könnten sie in einer zukünftigen Version zu 64-Bit-Integer werden. Demzufolge sollte man numerische Operationen wie Addition bei solchen Werten vermeiden, weil solche Operationen ihre eingehenden Zeichenketten als vorzeichenfähige statt vorzeichenlose Integer voraussetzen.</p>
<p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Versteckte Fenster werden nur erkannt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="WinGetClass.htm">WinGetClass</a>, <a href="Process.htm">Process</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="GroupAdd.htm">GroupAdd</a></p>

<h2 id="Examples">Beispiele</h2>

<div class="ex" id="ExID">
<p><a class="ex_number" href="#ExID"></a> Maximiert das aktive Fenster und meldet dessen eindeutige ID.</p>
<pre>WinGet, AktiveID, ID, A
WinMaximize, ahk_id %AktivID%
MsgBox, Die ID des aktiven Fensters ist "%AktiveID%".</pre>
</div>

<div class="ex" id="ExList">
<p><a class="ex_number" href="#ExList"></a> Besucht alle Fenster des gesamten Systems und zeigt Informationen zu jedem an.</p>
<pre>WinGet, id, List,,, Program Manager
Loop, %id%
{
    diese_ID := id%A_Index%
    WinActivate, ahk_id %diese_ID%
    WinGetClass, diese_Klasse, ahk_id %diese_ID%
    WinGetTitle, dieser_Titel, ahk_id %diese_ID%
    MsgBox, 4, , Gehe alle Fenster durch`n%A_Index% von %id%`nahk_id %diese_ID%`nahk_class %diese_Klasse%`n%dieser_Titel%`n`nWeiter?
    IfMsgBox, NO, break
}</pre>
</div>

<div class="ex" id="ExControlList">
<p><a class="ex_number" href="#ExControlList"></a> Extrahiert die einzelnen Steuerelementnamen aus der Steuerelementliste des aktiven Fensters.</p>
<pre>WinGet, StrlmntListe, ControlList, A
Loop, Parse, StrlmntListe, `n
{
    MsgBox, 4,, Steuerelement #%A_Index% ist "%A_LoopField%". Weiter?
    IfMsgBox, No
        break
}</pre>
</div>

<div class="ex" id="ExRealTime">
<p><a class="ex_number" href="#ExRealTime"></a> Zeigt in Echtzeit die Steuerelementliste des aktiven Fensters an.</p>
<pre>#Persistent
SetTimer, AktivesFensterBeobachten, 200
return

AktivesFensterBeobachten:
WinGet, StrlmntListe, ControlList, A
ToolTip, %StrlmntListe%
return</pre>
</div>

</body>
</html>
