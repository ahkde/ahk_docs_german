<!DOCTYPE HTML>
<html lang="de">
<head>
<title>PixelSearch - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Der PixelSearch-Befehl sucht innerhalb eines bestimmten Bildschirmbereichs nach einem Pixel, das eine bestimmte Farbe hat." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>PixelSearch</h1>

<p>Sucht innerhalb eines bestimmten Bildschirmbereichs nach einem Pixel, das eine bestimmte Farbe hat.</p>

<pre class="Syntax"><span class="func">PixelSearch</span>, AusgabeVarX, AusgabeVarY, X1, Y1, X2, Y2, FarbeID <span class="optional">, Variation, Modus</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeVarX, AusgabeVarY</dt>
  <dd><p>Namen der Ausgabevariablen, in denen die X- und Y-Koordinate des ersten Pixels, das die Farbe <em>FarbeID</em> hat, gespeichert werden sollen (wenn das Pixel nicht gefunden wird, werden diese Variablen leer gemacht). Standardmäßig sind Koordinaten relativ zum aktiven Fenster, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p>
    <p>Einer oder beide dieser Parameter können leer gelassen werden - in diesem Fall kann mit ErrorLevel (siehe unten) festgestellt werden, ob eine Übereinstimmung gefunden wurde.</p></dd>

  <dt>X1, Y1</dt>
  <dd><p>Die X- und Y-Koordinate einer Ecke des rechteckigen Suchbereichs, die den Startpunkt der Suche kennzeichnet (können <a href="../Variables.htm#Expressions">Ausdrücke</a> sein). Standardmäßig sind Koordinaten relativ zum aktiven Fenster, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p></dd>

  <dt>X2, Y2</dt>
  <dd><p>Die X- und Y-Koordinate einer Ecke des rechteckigen Suchbereichs, die den Endpunkt der Suche kennzeichnet (können <a href="../Variables.htm#Expressions">Ausdrücke</a> sein). Standardmäßig sind Koordinaten relativ zum aktiven Fenster, was aber mit <a href="CoordMode.htm">CoordMode</a> geändert werden kann.</p></dd>

  <dt>FarbeID</dt>
  <dd><p>Die dezimale oder hexadezimale ID der Farbe, die gesucht werden soll, im BGR-Format (kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein). Farben-IDs können mithilfe des Tools Window Spy (das über das Tray-Menü erreichbar ist) oder via <a href="PixelGetColor.htm">PixelGetColor</a> ermittelt werden. Zum Beispiel: <code>0x9d6346</code>.</p></dd>

  <dt>Variation</dt>
  <dd><p>Eine Zahl im Bereich von 0 bis 255, um die erlaubte Anzahl von Variationsnuancen in beiden Richtungen für die Intensität der Rot-, Grün- und Blaukomponenten der Farbe festzulegen (kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein). Wenn z. B. 2 angegeben ist und <var>FarbeID</var> 0x444444 ist, wird jede Farbe von 0x424242 bis 0x464646 als Übereinstimmung angesehen. Dieser Parameter ist hilfreich, wenn die Farbe des Pixels leicht variiert. Wenn Sie 255 Variationsnuancen angeben, werden alle Farben übereinstimmen. Standardmäßig gelten 0 Variationsnuancen.</p></dd>

  <dt>Modus</dt>
  <dd><p>Dieser Parameter kann das Wort Fast, RGB oder beides enthalten (wenn beide vorhanden sind, müssen sie mit einem Leerzeichen voneinander getrennt werden; also <em>Fast RGB</em>).</p>
      <p id="fast"><strong>Fast</strong>: Verwendet eine schnellere Suchmethode, die die CPU-Auslastung von PixelSearch in den meisten Fällen drastisch reduziert. Obwohl Farbtiefen bis runter zu 8-Bit (256 Farben) unterstützt werden, schneidet der Fast-Modus bei 24-Bit- oder 32-Bit-Farben wesentlich besser ab. Wenn die Farbtiefe des Bildschirms 16-Bit oder niedriger ist, verhält sich der <em>Variation</em>-Parameter im Fast-Modus geringfügig anders als im Slow-Modus. Außerdem bewirkt der Fast-Modus, dass der Suchbereich nicht spaltenweise, sondern zeilenweise durchsucht wird. Daher wird möglicherweise ein anderes Pixel als das des Slow-Modus gefunden, wenn mehrere Übereinstimmungen vorhanden sind.</p>
      <p class="warning"><strong>Hinweis:</strong> Der Standardmodus <em>Slow</em> ist auf den meisten modernen Systemen aufgrund einer Inkompatibilität mit der Desktopgestaltung unbrauchbar, wodurch er um ein Vielfaches langsamer ist.</p>
      <p><strong>RGB</strong>: Bewirkt, dass <em>FarbeID</em> als RGB- statt BGR-Wert interpretiert wird. Mit anderen Worten, die roten und blauen Komponenten sind vertauscht.</p></dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, eine Ausnahme auszulösen, wenn beim Suchen ein Problem auftrat. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 0 gesetzt, wenn die Farbe im angegebenen Bereich gefunden wurde, auf 1, wenn sie nicht gefunden wurde, oder auf 2, wenn der Befehl die Suche aufgrund eines Problems nicht durchführen konnte.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Der Suchbereich muss sichtbar sein; das heißt, dass es nicht möglich ist, einen Bereich in einem Fenster zu durchsuchen, das hinter einem anderen Fenster liegt. Pixel unterhalb des Mauszeigers werden in der Regel erkannt. Videospielmauszeiger hingegen verdecken meistens die Sicht auf darunterliegende Pixel.</p>
<p>Die Suchrichtung ist von der Anordnung der Parameter abhängig. Mit anderen Worten: Wenn <em>X1</em> größer als <em>X2</em> ist, wird die Suche von rechts nach links durchgeführt, beginnend bei Spalte <em>X1</em>. Entsprechend wird, wenn <em>Y1</em> größer als <em>Y2</em> ist, die Suche von unten nach oben durchgeführt. Vor <span class="ver">[v1.1.32]</span> erforderte der Fast-Modus jedoch, dass <em>X1</em> und <em>Y1</em> die linke obere Ecke sein mussten.</p>
<p>Fast-Modus: PixelSearch startet bei den Koordinaten <em>X1</em> und <em>Y1</em> und sucht in der Zeile von <em>X1</em> bis <em>X2</em> nach einer Übereinstimmung. Wenn es keine Übereinstimmung findet, wird PixelSearch zeilenweise in Richtung <em>Y2</em> weitersuchen, bis etwas gefunden wird.</p>
<p>Slow-Modus: PixelSearch startet bei den Koordinaten <em>X1</em> und <em>Y1</em> und sucht in der Spalte von <em>Y1</em> bis <em>Y2</em> nach einer Übereinstimmung. Wenn es keine Übereinstimmung findet, wird PixelSearch spaltenweise in Richtung <em>X2</em> weitersuchen, bis etwas gefunden wird.</p>
<p>Wenn der Suchbereich groß ist und die Suche mit hoher Frequenz durchgeführt wird, kann es passieren, dass PixelSearch sehr viel CPU-Zeit in Anspruch nimmt. Um dem entgegenzuwirken, sollte die Größe des Suchbereichs auf ein Minimum beschränkt werden.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="PixelGetColor.htm">PixelGetColor</a>, <a href="ImageSearch.htm">ImageSearch</a>, <a href="CoordMode.htm">CoordMode</a>, <a href="MouseGetPos.htm">MouseGetPos</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Sucht innerhalb eines Bereichs des aktiven Fensters nach einem Pixel und speichert in <var>Px</var> und <var>Py</var> die X- und Y-Koordinate des ersten Pixels, das mit der angegebenen Farbe innerhalb von 3 Variationsnuancen übereinstimmt.</p>
<pre>PixelSearch, Px, Py, 200, 200, 300, 300, 0x9d6346, 3, Fast
if ErrorLevel
    MsgBox, Die Farbe wurde innerhalb des angegebenen Bereichs nicht gefunden.
else
    MsgBox, Eine Farbe innerhalb von 3 Variationsnuancen wurde auf X%Px% Y%Py% gefunden.</pre>
</div>

</body>
</html>
