<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Switch - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Die Switch-Anweisung vergleicht einen Wert mit mehreren Cases und führt die Anweisungen der ersten Übereinstimmung aus." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Switch <span class="ver">[v1.1.31+]</span></h1>

<p>Vergleicht einen Wert mit mehreren Cases und führt die <a href="../Concepts.htm#statement">Anweisungen</a> der ersten Übereinstimmung aus.</p>

<pre class="Syntax"><span class="func">Switch</span> <span class="optional">SwitchWert</span>
{
<span class="func">Case</span> CaseWert1:
    <i>Anweisungen1</i>
<span class="func">Case</span> CaseWert2a, CaseWert2b:
    <i>Anweisungen2</i>
<span class="func">Default</span>:
    <i>Anweisungen3</i>
}</pre>

<h2 id="Parameters">Parameter</h2>
<dl>
  <dt>SwitchWert</dt>
  <dd>
    <p>Wenn weggelassen, wird das erste Case ausgeführt, dessen Auswertung <a href="../Concepts.htm#boolean">True</a> (weder 0 noch leer) ergibt. Andernfalls wird <em>SwitchWert</em> einmal ausgewertet und mit jedem Case-Wert verglichen. Bei Übereinstimmung wird das entsprechende Case ausgeführt.</p>
    <p>Wenn kein passendes Case gefunden wird, wird <em>Default</em> ausgeführt, falls vorhanden.</p>
  </dd>
  <dt>CaseWertN</dt>
  <dd>
    <p>Der zu prüfende oder zu vergleichende Wert, je nachdem, ob <em>SwitchWert</em> vorhanden ist.</p>
  </dd>
</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Es wird ein numerischer Vergleich durchgeführt, wenn sowohl <em>SwitchWert</em> als auch der Case-Wert Zahlen oder numerische Zeichenketten sind. Jeder Case-Wert wird separat behandelt und beeinflusst nicht den Vergleichstyp anderer Case-Werte. <span class="ver">[v1.1.36+]</span>: Wenn einer der beiden Ausdrücke eine in Anführungszeichen gesetzte Zeichenkette ist, wird der Vergleich nicht-numerisch durchgeführt. Zum Beispiel stimmt <code>switch v:="00"</code> mit <code>case "00":</code> oder <code>case 0:</code> überein, aber nicht mit <code>case "0":</code>.</p>
<p><a href="StringCaseSense.htm">StringCaseSense</a> bestimmt, ob bei Zeichenkettenvergleichen zwischen Groß- und Kleinschreibung unterschieden wird.</p>
<p>Für jedes Case können bis zu 20 Werte angegeben werden. Jeder Wert muss ein <a href="../Language.htm#expressions">Ausdruck</a> sein, aber es kann auch ein einfacher Ausdruck angegeben werden, z.B. eine direkt geschriebene Zahl, eine in Anführungszeichen gesetzte Zeichenkette oder eine Variable. <em>Case</em> und <em>Default</em> müssen mit einem Doppelpunkt enden.</p>
<p>Die erste Anweisung eines Case kann entweder unter oder neben dem <em>Case</em> stehen. Jedes Case endet indirekt beim nächsten <em>Case</em>/<em>Default</em> oder bei der geschweiften Endklammer. Im Gegensatz zu den Switch-Anweisungen in einigen anderen Sprachen gibt es kein indirektes Fall-Through, außerdem wird kein <a href="Break.htm">Break</a> verwendet (außer um eine umschließende Schleife zu unterbrechen).</p>
<p>Da sich alle Cases im selben Block befinden, kann ein Label, das in einem Case definiert ist, das Ziel von <a href="Goto.htm">Goto</a> in einem anderen Case sein. Wenn allerdings ein Label direkt über <em>Case</em> oder <em>Default</em> platziert wird, verweist es auf das Ende des vorherigen Case, nicht auf den Anfang des nächsten Case.</p>
<p><em>Default</em> muss nicht als letztes aufgelistet werden.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="IfExpression.htm">If (Ausdruck)</a>, <a href="Else.htm">Else</a>, <a href="Block.htm">Blöcke</a></p>

<h2 id="examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Vergleicht eine Zahl mit mehreren Cases und zeigt das Mitteilungsfenster der ersten Übereinstimmung an.</p>
<pre>switch 2
{
case 1: MsgBox keine Übereinstimmung
case 2: MsgBox Übereinstimmung
case 3: MsgBox keine Übereinstimmung
}</pre>
</div>

<div class="ex" id="ExBasicOmitted">
<p><a class="ex_number" href="#ExBasicOmitted"></a> Der <em>SwitchWert</em>-Parameter kann weggelassen werden, um das erste Case auszuführen, dessen Auswertung True ergibt.</p>
<pre>Zkette := "Franz jagt im komplett verwahrlosten Taxi quer durch Bayern."
switch
{
case InStr(Zkette, "Bus"): MsgBox false
case InStr(Zkette, "Taxi"): MsgBox true
case InStr(Zkette, "Bahn"): MsgBox false
}</pre>
</div>

<div class="ex" id="ExInput">
<p><a class="ex_number" href="#ExInput"></a> Dies ist ein funktionierendes Hotkey-Beispiel. Die Dokumentation des <a href="Input.htm">Input</a>-Befehls enthält ein funktionsgleiches <a href="Input.htm#ExHotkey">Beispiel</a>, das if-else-if verwendet.</p>
<pre>~&lt;::
Input, BenutzerEingabe, V T5 L4 C, {enter}.{esc}{tab}, btw,otoh,fl,ahk,ca
switch ErrorLevel
{
case "Max":
    MsgBox, Ihre Eingabe "%BenutzerEingabe%" hat die maximale Textlänge erreicht.
    return
case "Timeout":
    MsgBox, Sie haben "%BenutzerEingabe%" innerhalb der verfügbaren Zeit eingegeben.
    return
case "NewInput":
    return
default:
    if InStr(ErrorLevel, "EndKey:")
    {
        MsgBox, Sie haben "%BenutzerEingabe%" eingegeben und die Eingabeerfassung mit %ErrorLevel% beendet.
        return
    }
}
switch BenutzerEingabe
{
case "btw":   Send, {backspace 4}by the way
case "otoh":  Send, {backspace 5}on the other hand
case "fl":    Send, {backspace 3}Florida
case "ca":    Send, {backspace 3}California
case "ahk":   Run, https://www.autohotkey.com
}
return
</pre>
</div>

</body>
</html>
