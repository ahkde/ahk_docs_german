<!DOCTYPE HTML>
<html lang="de">
<head>
<title>WinWaitActive / WinWaitNotActive - Syntax &amp; Verwendung | AutoHotkey v1</title>
<meta name="description" content="Die Befehle WinWaitActive und WinWaitNotActive warten, bis ein bestimmtes Fenster aktiv oder nicht aktiv ist." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>WinWaitActive / WinWaitNotActive</h1>

<p>Wartet, bis ein bestimmtes Fenster aktiv oder nicht aktiv ist.</p>

<pre class="Syntax">
<span class="func">WinWaitActive</span> <span class="optional">, FensterTitel, FensterText, Zeitlimit, AusnahmeTitel, AusnahmeText</span>
<span class="func">WinWaitNotActive</span> <span class="optional">, FensterTitel, FensterText, Zeitlimit, AusnahmeTitel, AusnahmeText</span>
</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>FensterTitel, FensterText, AusnahmeTitel, AusnahmeText</dt>
  <dd>
    <p>Wenn jeder dieser Parameter leer ist oder weggelassen wird, wird das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a> verwendet. Andernfalls geben Sie für <em>FensterTitel</em> einen <a href="../misc/WinTitle.htm">Fenstertitel oder andere Kriterien</a> zur Identifizierung des Zielfensters und/oder für <em>FensterText</em> eine Teilzeichenkette aus einem Textelement des Zielfensters an (Textelemente können mit dem internen Tool "Window Spy" in Erfahrung gebracht werden).</p>
    <p><em>AusnahmeTitel</em> und <em>AusnahmeText</em> können verwendet werden, um ein oder mehrere Fenster anhand ihres Titels oder Textes auszuschließen. Ihre Angabe ähnelt der von <em>FensterTitel</em> und <em>FensterText</em>, außer dass <em>AusnahmeTitel</em> keine anderen Kriterien als den Fenstertitel erkennt.</p>
    <p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Standardmäßig werden versteckte Fenster nicht erkannt und versteckte Textelemente erkannt, was mit <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> und <a href="DetectHiddenText.htm">DetectHiddenText</a> geändert werden kann. Standardmäßig muss ein Fenstertitel mit dem angegebenen <em>FensterTitel</em> oder <em>AusnahmeTitel</em> beginnen, um eine Übereinstimmung zu sein, was mit <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> geändert werden kann.</p>
  </dd>

  <dt>Zeitlimit</dt>
  <dd>
    <p>Wenn leer oder weggelassen, wird der Befehl unendlich lang warten. Andernfalls geben Sie die maximale Wartezeit in Sekunden an. Um auf einen Bruchteil einer Sekunde zu warten, geben Sie eine Floating-Point-Zahl an, z.B. 0.25, um maximal 250 Millisekunden zu warten. Die Angabe von 0 entspricht der Angabe von 0.5. Dieser Parameter kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p>
  </dd>

</dl>

<h2 id="ErrorLevel">ErrorLevel</h2>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird auf 1 gesetzt, wenn der Befehl das Zeitlimit überschritten hat, andernfalls auf 0.</p>
<h2 id="Remarks">Bemerkungen</h2>
<p>Der Befehl hört bereits auf zu warten, wenn ein passendes Fenster gefunden wird, und nicht erst, wenn <em>Zeitlimit</em> abgelaufen ist. In diesem Fall wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> sofort auf 0 gesetzt und die Skriptausführung fortgesetzt.</p>
<p>Sowohl WinWaitActive als auch WinWaitNotActive werden das <a href="../misc/WinTitle.htm#LastFoundWindow">Zuletzt Gefundene Fenster</a> aktualisieren, wenn zu Beginn des Befehls ein geeignetes Fenster aktiv ist. Außerdem wird WinWaitActive das Zuletzt Gefundene Fenster aktualisieren, wenn ein geeignetes Fenster vor Ablauf des Zeitlimits aktiv wird.</p>
<p>Während der Befehl wartet, können neue <a href="../misc/Threads.htm">Threads</a> via <a href="../Hotkeys.htm">Hotkeys</a>, <a href="Menu.htm">benutzerdefinierte Menüpunkte</a> oder <a href="SetTimer.htm">Timer</a> gestartet werden.</p>
<p>Wenn ein anderer <a href="../misc/Threads.htm">Thread</a> den Inhalt der Variablen ändert, die für die Parameter dieses Befehls verwendet wurden, sieht der Befehl die Änderung nicht, d.h. der Befehl verwendet weiterhin den Titel und Text, die ursprünglich in den Variablen vorhanden waren, als der Befehl zu warten begann.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="WinWait.htm">WinWait</a>, <a href="WinWaitClose.htm">WinWaitClose</a>, <a href="WinExist.htm">WinExist()</a>, <a href="WinActive.htm">WinActive()</a>, <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>, <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Öffnet Notepad und wartet maximal 2 Sekunden, bis es aktiv ist. Wenn WinWait das Zeitlimit überschreitet, wird eine Fehlermeldung angezeigt, andernfalls wird Notepad minimiert.</p>
<pre>Run, notepad.exe
WinWaitActive, Unbenannt - Editor,, 2
if ErrorLevel
{
    MsgBox, WinWait hat das Zeitlimit überschritten.
    return
}
else
    WinMinimize <em>; Verwendet das von WinWaitActive gefundene Fenster.</em></pre>
</div>

</body>
</html>
