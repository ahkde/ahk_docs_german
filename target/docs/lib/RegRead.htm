<!DOCTYPE HTML>
<html lang="de">
<head>
<title>RegRead - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Der RegRead-Befehl liest einen Wert aus der Registry." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>RegRead</h1>
<p>Liest einen Wert aus der Registry.</p>

<h2 id="new">Neue Syntax <span class="ver">[v1.1.21+]</span></h2>
<pre class="Syntax"><span class="func">RegRead</span>, AusgabeVar, SchlüsselName <span class="optional">, WertName</span></pre>

<h3 id="New_Parameters">Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Ausgabevariable, in der der abgerufene Wert gespeichert werden soll. Falls der Wert nicht abgerufen werden kann, wird die Variable leer gemacht und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt.</p></dd>

  <dt>SchlüsselName</dt>
  <dd><p>Der vollständige Name des Registry-Schlüssels.</p>
      <p>Der Name muss entweder mit HKEY_LOCAL_MACHINE, HKEY_USERS, HKEY_CURRENT_USER, HKEY_CLASSES_ROOT oder HKEY_CURRENT_CONFIG beginnen (oder jeweils die Abkürzung, wie z. B. HKLM). Um Zugriff auf eine <a href="LoopReg.htm#remote">Remote-Registry</a> zu erhalten, setzen Sie wie folgt den Computernamen und einen Doppelpunkt (oder <span class="ver">[in v1.1.21+]</span> einen Schrägstrich) davor: <code>\\workstation01:HKEY_LOCAL_MACHINE</code></p></dd>

  <dt>WertName</dt>
  <dd><p>Der Name des Wertes, der abgerufen werden soll. Lässt man diesen Parameter weg, wird der Standardwert von <em>SchlüsselName</em> abgerufen - das ist der Wert, der in RegEdit als "(Standard)" angezeigt wird. Wenn es keinen Standardwert gibt (also wenn RegEdit "Wert nicht festgelegt" anzeigt), wird <em>AusgabeVar</em> leer gemacht und ErrorLevel auf 1 gesetzt.</p></dd>

</dl>

<h2 id="old">Alte Syntax</h2>
<p class="warning"><strong>Veraltet:</strong> Diese Syntax ist nicht für neue Skripte empfohlen. Verwenden Sie stattdessen die <a href="#new">neue Syntax</a>.</p>
<pre class="Syntax"><span class="func">RegRead</span>, AusgabeVar, RootSchlüssel, UnterSchlüssel <span class="optional">, WertName</span></pre>

<h3 id="Old_Parameters">Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Ausgabevariable, in der der abgerufene Wert gespeichert werden soll. Falls der Wert nicht abgerufen werden kann, wird die Variable leer gemacht und <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt.</p></dd>

  <dt>RootSchlüssel</dt>
  <dd><p>Entweder HKEY_LOCAL_MACHINE (oder HKLM), HKEY_USERS (oder HKU), HKEY_CURRENT_USER (oder HKCU), HKEY_CLASSES_ROOT (oder HKCR) oder HKEY_CURRENT_CONFIG (oder HKCC). Um Zugriff auf eine <a href="LoopReg.htm#remote">Remote-Registry</a> zu erhalten, setzen Sie wie folgt den Computernamen und einen Doppelpunkt (oder <span class="ver">[in v1.1.21+]</span> einen Schrägstrich) davor: <code>\\workstation01:HKEY_LOCAL_MACHINE</code></p></dd>

  <dt>UnterSchlüssel</dt>
  <dd><p>Der Name des Unterschlüssels (z. B. Software\BeliebigeAnwendung).</p></dd>
  
  <dt>WertName</dt>
  <dd><p>Der Name des Wertes, der abgerufen werden soll. Lässt man diesen Parameter weg, wird der Standardwert von <em>UnterSchlüssel</em> abgerufen - das ist der Wert, der in RegEdit als "(Standard)" angezeigt wird. Wenn es keinen Standardwert gibt (also wenn RegEdit "Wert nicht festgelegt" anzeigt), wird <em>AusgabeVar</em> leer gemacht und ErrorLevel auf 1 gesetzt.</p></dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 (z. B. nicht-existierender Schlüssel oder Wert) oder bei Erfolg auf 0 gesetzt.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a> wird auf das Ergebnis der Systemfunktion GetLastError() gesetzt.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Zurzeit werden nur die folgenden Werttypen unterstützt: REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD und REG_BINARY.</p>
<p>REG_DWORD-Werte werden immer als positive Dezimalzahlen dargestellt. Wenn die Zahl dazu gedacht war, negativ zu sein, können Sie sie mit <code>AusgabeVar := AusgabeVar &lt;&lt; 32 &gt;&gt; 32</code> oder ähnlichem in einen vorzeichenfähigen 32-Bit-Integer umwandeln.</p>
<p>Beim Lesen eines REG_BINARY-Schlüssels ist das Ergebnis eine Zeichenkette mit hexadezimalen Zeichen. Zum Beispiel würde ein REG_BINARY-Wert von 01,a9,ff,77 als Zeichenkette 01A9FF77 gelesen werden.</p>
<p>Beim Lesen eines REG_MULTI_SZ-Schlüssels endet jede Komponente mit einem Zeilenumbruchszeichen (`n). Gibt es keine Komponenten, wird <em>AusgabeVar</em> leer gemacht. In <a href="FileSelectFile.htm">FileSelectFile</a> finden Sie ein Beispiel, wie einzelne Komponenten aus <em>AusgabeVar</em> extrahiert werden können.</p>
<p><span class="ver">[v1.1.10.01+]</span>: REG_BINARY-Werte größer als 64 KB können auch gelesen werden.</p>
<p>Mit der <a href="LoopReg.htm">Registry-Schleife</a> können mehrere Registry-Schlüssel und -Werte abgerufen und bearbeitet werden.</p>
<p>In den Bemerkungen zur <a href="LoopReg.htm">Registry-Schleife</a> finden Sie Hinweise, wie man auf die Registry eines Remotecomputers zugreifen kann.</p>
<p>Mit <a href="SetRegView.htm">SetRegView</a> können Einträge von den 64-Bit-Bereichen der Registry in einem 32-Bit-Skript oder umgekehrt gelesen und geschrieben werden.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="RegDelete.htm">RegDelete</a>, <a href="RegWrite.htm">RegWrite</a>, <a href="LoopReg.htm">Registry-Schleife</a>, <a href="SetRegView.htm">SetRegView</a>, <a href="IniRead.htm">IniRead</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExNewVsOld">
<p><a class="ex_number" href="#ExNewVsOld"></a> Neue Syntax vs. alte Syntax.</p>
<p>Trotz der unterschiedlichen Syntax haben beide Beispiele den gleichen Effekt: Sie lesen einen Wert aus der Registry und speichern ihn in <var>AusgabeVar</var>.</p>
<pre>RegRead, AusgabeVar, HKEY_LOCAL_MACHINE\Software\BeliebigeAnwendung, Testwert</pre>
<pre>RegRead, AusgabeVar, HKEY_LOCAL_MACHINE, Software\BeliebigeAnwendung, Testwert</pre>
</div>

<div class="ex" id="ExProgramFiles">
<p><a class="ex_number" href="#ExProgramFiles"></a> Ermittelt und meldet den Pfad des "Program Files"-Ordners. Eine alternative Methode finden Sie unter <a href="EnvGet.htm#ExProgramFiles">EnvGet-Beispiel #2</a>.</p>
<pre><em>; Die nachfolgende Zeile stellt sicher, dass die 64-Bit-Version des Programm-Ordners
; zurückgegeben wird, wenn das Betriebssystem 64-Bit ist und das Skript nicht.</em>
<a href="SetRegView.htm">SetRegView</a> 64  <em>; Benötigt <span class="ver">[v1.1.08+]</span></em>

RegRead, AusgabeVar, HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion, ProgramFilesDir
MsgBox, Programmdateien sind in: %AusgabeVar%</pre>
</div>

<div class="ex" id="ExType">
<p><a class="ex_number" href="#ExType"></a> Ermittelt den TYP eines Registry-Wertes (z. B. REG_SZ oder REG_DWORD).</p>
<pre>MsgBox % RegSchlüsselTyp("HKCU", "Environment", "TEMP")
return

RegSchlüsselTyp(RootSchlüssel, UnterSchlüssel, WertName)  <em>; Diese Funktion gibt den Typ eines bestimmten Wertes zurück.</em>
{
    Loop, %RootSchlüssel%, %UnterSchlüssel%
        if (A_LoopRegName = WertName)
            return A_LoopRegType
    return "Fehler"
}</pre>
</div>

</body>
</html>
