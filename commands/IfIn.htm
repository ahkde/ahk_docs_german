<!DOCTYPE HTML>
<html lang="de">
<head>
<title>If Var in/contains VergleichListe - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content='Die Anweisung "if Var in/contains VergleichListe" überprüft, ob der Inhalt der Variable mit einem der Elemente aus der Liste übereinstimmt.' />
<meta name="ahk:equiv-v2" content="commands/If.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>If Var [not] in/contains Wert1,Wert2,...</h1>

<p>Überprüft, ob der Inhalt der <a href="../Variables.htm">Variable</a> mit einem der Elemente aus der Liste übereinstimmt.</p>

<pre class="Syntax">
<span class="func">if</span> Var <span class="func">in</span> VergleichListe
<span class="func">if</span> Var <span class="func">not in</span> VergleichListe

<span class="func">if</span> Var <span class="func">contains</span> VergleichListe
<span class="func">if</span> Var <span class="func">not contains</span> VergleichListe
</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Var</dt>
  <dd><p>Name der <a href="../Variables.htm">Variable</a>, deren Inhalt überprüft werden soll. Bei dem Operator "in" muss die Variable exakt mit einem Element aus der Liste übereinstimmen. Bei dem Operator "contains" verhält es sich toleranter: Eine Übereinstimmung erfolgt, wann immer <em>Var</em> eines der Elemente als Teilzeichenkette enthält.</p></dd>

  <dt>VergleichListe</dt>
  <dd><p>Eine kommagetrennte Liste mit Zeichenketten, die mit dem Inhalt von <em>Var</em> verglichen werden sollen. <strong>Alle Leer- und Tabulatorzeichen an den angrenzenden Kommas sind von Bedeutung</strong> - das heißt, dass sie ein Teil der Übereinstimmungszeichenkette sind. Wenn <em>VergleichListe</em> beispielsweise <code>ABC , XYZ</code> wäre, kann eine Übereinstimmung nur erfolgen, wenn <em>Var</em> ABC mit einem Leerzeichen am Ende oder XYZ mit einem Leerzeichen am Anfang enthält.</p>
      <p>Zwei aufeinanderfolgende Kommas ergeben ein direkt geschriebenes Komma. Zum Beispiel würde die folgende Zeile ein direkt geschriebenes Komma nach dem Wort Zkette1 erzeugen: <code>if Var in Zkette1,,,Zkette2</code>. Im Vergleich dazu würde die folgende Liste nur ein einzelnes Element mit einem direkt geschriebenen Komma dazwischen enthalten: <code>if Var in einzelnes,,Element</code>. Um ein leeres Element in die Liste einzufügen, beginnen Sie die Liste mit einem Komma. Zum Beispiel: <code>if Var in ,Zkette1,Zkette2</code> (bei dem Operator "contains" wird ein leeres Element immer zur Übereinstimmung führen, weil eine leere Zeichenkette in jeder Zeichenkette gefunden werden kann).</p>
      <p>Da die Elemente in <em>VergleichListe</em> nicht als einzelne Parameter behandelt werden, kann die Liste komplett in einer Variable enthalten sein. Diese Methode ist sowieso notwendig, wenn die Liste eine Länge von 16383 Zeichen überschreitet (die maximale Länge einer Skriptzeile). Zum Beispiel könnte <em>VergleichListe</em> aus <code>%Liste1%,%Liste2%,%Liste3%</code> bestehen, von der jede Unterliste eine lange Liste mit Elementen enthält.</p>
      <p>Bei jedem einzelnen Element in der Liste, das länger als 16384 Zeichen ist, werden die zusätzlichen Zeichen als neues Listenelement behandelt. Daher sollte man am besten vermeiden, solche Elemente überhaupt erst einzufügen.</p></dd>

</dl>

<h2 id="Remarks">Bemerkungen</h2>
<p>Der Vergleich erfolgt immer alphabetisch, nicht numerisch. Zum Beispiel würde die Zeichenkette "11" nicht mit dem Listenelement "11.0" übereinstimmen.</p>
<p>Der Operator "contains" ist das gleiche wie, als würde man <a href="InStr.htm">InStr()</a> oder <a href="IfInString.htm">If[Not]InString</a> verwenden, außer dass er mehrere Suchzeichenketten unterstützt (von denen jede eine Übereinstimmung bewirken kann).</p>
<p>Mit <code><a href="StringCaseSense.htm">StringCaseSense</a> On</code> kann der Vergleich Groß-/Kleinschreibung-sensitiv gemacht werden.</p>
<p>Wenn die <em>VergleichListe</em> relativ lang ist, kann sie via <a href="../Scripts.htm#continuation">Fortsetzungsbereich</a> in mehreren kurzen Zeilen aufgeteilt werden, um die Übersichtlichkeit und Wartbarkeit des Skripts zu erhöhen.</p>
<p>Die Operatoren "in" und "contains" werden in <a href="../Variables.htm#Expressions">Ausdrücken</a> nicht unterstützt. Verwenden Sie stattdessen <a href="IfExpression.htm">If-Anweisungen</a> wie z. B. <code>if (Var ~= "iADi)\A(Wert1|Wert2)\z")</code> für "in" oder <code>if (Var ~= "i)Wert1|Wert2")</code> für "contains", um das Verhalten dieser Operatoren zu simulieren.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="IfBetween.htm">if Var between</a>, <a href="IfEqual.htm">IfEqual/Greater/Less</a>, <a href="IfInString.htm">IfInString</a>, <a href="StringCaseSense.htm">StringCaseSense</a>, <a href="Block.htm"> Blöcke</a>, <a href="Else.htm">Else</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExInString">
<p><a class="ex_number" href="#ExInString"></a> Überprüft, ob <var>var</var> die Dateiendung EXE, BAT oder COM ist.</p>
<pre>if var in exe,bat,com
    MsgBox Die Dateiendung ist eine ausführbare.</pre>
</div>

<div class="ex" id="ExInNumber">
<p><a class="ex_number" href="#ExInNumber"></a> Überprüft, ob <var>var</var> die Primzahl 1, 2, 3, 5, 7 oder 11 ist.</p>
<pre>if var in 1,2,3,5,7,11 <em>; Vermeiden Sie Leerzeichen in der Liste.</em>
    MsgBox %var% ist eine kleine Primzahl.</pre>
</div>

<div class="ex" id="ExContainsNumber">
<p><a class="ex_number" href="#ExContainsNumber"></a> Überprüft, ob <var>var</var> die Ziffer 1 oder 3 enthält.</p>
<pre>if var contains 1,3  <em>; Beachten Sie hier, dass die Werte nicht als Zahlen, sondern als Zeichenketten verglichen werden.</em>
    MsgBox var enthält die Zahl 1 oder 3 (var könnte auch eine 1, 3, 10, 21, 23, etc. sein)</pre>
</div>

<div class="ex" id="ExVar">
<p><a class="ex_number" href="#ExVar"></a> Überprüft, ob <var>var</var> eines der Elemente in <var>MeineElementeListe</var> ist.</p>
<pre>if var in %MeineElementeListe%
    MsgBox %var% ist in der Liste.</pre>
</div>

<div class="ex" id="ExInputBox">
<p><a class="ex_number" href="#ExInputBox"></a> Erlaubt dem Benutzer die Eingabe einer Zeichenkette und überprüft, ob sie das Wort Ja oder Nein ist.</p>
<pre>InputBox, BenutzerEingabe, Bitte JA oder NEIN eingeben
if BenutzerEingabe not in ja,nein
    MsgBox Ihre Eingabe ist ungültig.</pre>
</div>

<div class="ex" id="ExWinGetTitle">
<p><a class="ex_number" href="#ExWinGetTitle"></a> Überprüft, ob <var>aktiver_titel</var> "Adressenliste.txt" oder "Kundenliste.txt" enthält, und überprüft, ob es "metapad" oder "Notepad" enthält.</p>
<pre>WinGetTitle, aktiver_titel, A
if aktiver_titel contains Adressenliste.txt,Kundenliste.txt
    MsgBox Eines der gewünschten Fenster ist aktiv.
if aktiver_titel not contains metapad,Notepad
    MsgBox Aber die Datei ist weder in Metapad noch in Notepad geöffnet.</pre>
</div>

</body>
</html>
