<!DOCTYPE HTML>
<html lang="de">
<head>
<title>FileAppend - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Der FileAppend-Befehl schreibt Text an das Ende einer Datei (und erstellt sie erst, falls notwendig)." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>FileAppend</h1>

<p>Schreibt Text an das Ende einer Datei (und erstellt sie erst, falls notwendig).</p>

<pre class="Syntax"><span class="func">FileAppend</span> <span class="optional">, Text, DateiName, Codierung</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Text</dt>
  <dd><p>Der Text, der an das Ende der Datei angefügt werden soll. Dieser Text kann Zeilenumbruchszeichen (`n) enthalten, um neue Zeilen beginnen zu können. Außerdem kann mithilfe eines <a href="../Scripts.htm#continuation">Fortsetzungsbereichs</a> eine lange Zeile in mehreren kurzen Zeilen aufgeteilt werden.</p>
      <p>Wenn <em>Text</em> leer ist, wird <em>DateiName</em> als leere Datei erstellt (wenn die Datei bereits existiert, wird nur ihr Änderungsdatum aktualisiert).</p>
    <p>Ist <em>Text</em> die Variablenreferenz <a href="../misc/Clipboard.htm#ClipboardAll">%ClipboardAll%</a> oder eine Variable, die zuvor den Wert von ClipboardAll zugewiesen bekommen hat, wird <em>DateiName</em> ohne Vorbehalt mit dem kompletten Inhalt des Zwischenspeichers überschrieben (d. h. <a href="FileDelete.htm">FileDelete</a> ist nicht notwendig).</p></dd>

  <dt>DateiName</dt>
  <dd><p>Der Name der Datei, die erweitert werden soll. Wenn kein absoluter Pfad angegeben ist, wird die Datei im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet. Das Zielverzeichnis muss bereits vorhanden sein.</p>
    <p><strong>End-of-Line-Übersetzung (EOL)</strong>: Um die EOL-Konvertierung zu deaktivieren, setzen Sie ein Sternchen vor dem Dateinamen. Dieser Modus schreibt jedes Zeilenumbruchszeichen (`n) als einzelnes LF-Zeichen (LF) statt wie üblich als CR+LF. Zum Beispiel: <code>*C:\Meine Unix-Datei.txt</code>.</p>
    <p>Falls die Datei noch nicht offen ist (z. B. wegen einer <a href="LoopReadFile.htm">dateilesenden Schleife</a>), wird die EOL-Übersetzung automatisch deaktiviert, wenn der <em>Text</em>-Parameter CR-LF-Paare (`r`n) enthält. Mit anderen Worten tritt die im vorherigen Absatz beschriebene Sternchenoption automatisch in Kraft. Allerdings wird durch die Angabe des Sternchens, wenn <em>Text</em> `r`n enthält, die Leistung verbessert, weil das Programm nicht mehr gezwungen ist, nach `r`n in <em>Text</em> zu suchen.</p>
    <p id="stdout"><strong>Standardausgabe (stdout)</strong>: Ein Sternchen (*) in <em>DateiName</em> bewirkt, dass <em>Text</em> zur Standardausgabe (stdout) gesendet wird. Diese Art von Text kann auf eine Datei umgeleitet, an eine EXE-Datei weitergeleitet oder von <a href="_ErrorStdOut.htm">originellen Texteditoren</a> abgefangen werden. Zum Beispiel wäre die folgende Zeile als Eingabeaufforderung gültig:</p>
      <pre class="no-highlight">"%ProgramFiles%\AutoHotkey\AutoHotkey.exe" "Mein Skript.ahk" &gt;"Fehlerprotokoll.txt"</pre>
    <p>Allerdings wird ein zur Standardausgabe gesendeter Text nicht in der Eingabeaufforderung angezeigt, von wo aus die Zeile gestartet wurde. Dies kann umgangen werden, indem 1) <span class="ver">[v1.1.33+]</span> das Skript mit der <a href="../misc/Ahk2ExeDirectives.htm#ConsoleApp">Ahk2Exe-ConsoleApp-Direktive</a> kompiliert, oder 2) die Ausgabe des Skripts via Piping an einen anderen Befehl oder an ein anderes Programm weitergeleitet wird. Zum Beispiel:</p>
      <pre class="no-highlight">"%ProgramFiles%\AutoHotkey\AutoHotkey.exe" "Mein Skript.ahk" |more</pre>
      <pre class="no-highlight">For /F "tokens=*" %L in ('""%ProgramFiles%\AutoHotkey\AutoHotkey.exe" "Mein Skript.ahk""') do @Echo %L</pre>
    <p><span class="ver">[v1.1.20+]:</span> Zwei Sternchen (**) in <em>DateiName</em> bewirken, dass <em>Text</em> zur Standardfehlerausgabe (stderr) gesendet wird.</p>
    </dd>

  <dt>Codierung</dt>
  <dd><p><span class="ver">[AHK_L 42+]:</span> Überschreibt die Standardcodierung von <a href="FileEncoding.htm">FileEncoding</a> mit einer benutzerdefinierten <em>Codierung</em>.</p></dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a> wird auf das Ergebnis der Systemfunktion GetLastError() gesetzt.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Um eine existierende Datei zu überschreiben, löschen Sie sie mit <a href="FileDelete.htm">FileDelete</a>, bevor Sie FileAppend verwenden.</p>
<p>Die Zieldatei wird nach Anfügen des Textes automatisch geschlossen (außer wenn FileAppend in seinem Einzelparameter-Modus innerhalb einer <a href="LoopReadFile.htm">dateilesenden/-schreibenden Schleife</a> ist).</p>
<p><span class="ver">[AHK_L 42+]:</span> <a href="FileOpen.htm">FileOpen()</a> im Anfügemodus bietet mehr Kontrolle als FileAppend und lässt die Datei geöffnet, anstatt sie jedes Mal neu zu öffnen und zu schließen. Sobald eine Datei im Anfügemodus geöffnet ist, kann die Zeichenkette mit <code>File.<a href="../objects/File.htm#Write">Write</a>(Zeichenkette)</code> angefügt werden. File-Objekte unterstützen auch binäre Verarbeitung mit <a href="../objects/File.htm#RawWrite">RawWrite</a>/<a href="../objects/File.htm#RawRead">RawRead</a> oder <a href="../objects/File.htm#WriteNum">Write<i>Num</i></a>/<a href="../objects/File.htm#ReadNum">Read<i>Num</i></a>, während FileAppend nur Text unterstützt.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="FileOpen.htm">FileOpen()</a>/<a href="../objects/File.htm">File-Objekt</a>, <a href="FileRead.htm">FileRead</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="FileReadLine.htm">FileReadLine</a>, <a href="IniWrite.htm">IniWrite</a>, <a href="FileDelete.htm">FileDelete</a>, <a href="OutputDebug.htm">OutputDebug</a>, <a href="../Scripts.htm#continuation">Fortsetzungsbereiche</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Erstellt eine Datei, falls erforderlich, und fügt eine Zeile an.</p>
<pre>FileAppend, Eine weitere Zeile.`n, C:\Meine Dokumente\Test.txt</pre>
</div>

<div class="ex" id="ExContSect">
<p><a class="ex_number" href="#ExContSect"></a> Verwenden Sie einen <a href="../Scripts.htm#continuation">Fortsetzungsbereich</a>, um die Übersichtlichkeit und Wartbarkeit des Skripts zu verbessern.</p>
<pre>FileAppend,
(
Eine Textzeile.
Standardmäßig befindet sich das CR-Zeichen (Enter) zwischen der vorherigen und dieser Zeile.
    Diese Zeile wird mit einem Tabulator eingerückt; Standardmäßig wird dieser Tabulator auch in die Datei geschrieben.
Variablenreferenzen wie %Var% werden standardmäßig mit dem Inhalt der Variable ersetzt.
), C:\Meine Datei.txt</pre>
</div>

<div class="ex" id="FTP">
<p><a class="ex_number" href="#FTP"></a> Demonstriert, wie das FTP-Hochladen mithilfe des systeminternen FTP-Befehls automatisiert werden kann. Dieses Skript wurde in Windows XP getestet.</p>
<pre>FTPBefehlDatei := A_ScriptDir "\FTPBefehle.txt"
FTPLogDatei := A_ScriptDir "\FTPLog.txt"
FileDelete %FTPBefehlDatei%  <em>; Falls das vorherige Ausführen vorzeitig terminiert wurde.</em>

FileAppend,  <em>; Das Komma ist in diesem Fall erforderlich.</em>
(
open host.domain.com
username
password
binary
cd htdocs
put %VarMitNamenDerZielDatei%
delete EineAndereDatei.htm
rename AlteDateiName.htm NeueDateiName.htm
ls -l
quit
), %FTPBefehlDatei%

RunWait %ComSpec% /c ftp.exe -s:"%FTPBefehlDatei%" &gt;"%FTPLogDatei%"
FileDelete %FTPBefehlDatei%  <em>; Löscht sie aus Sicherheitsgründen.</em>
Run %FTPLogDatei%  <em>; Zeigt das Protokoll zum Untersuchen an.</em></pre>
</div>

</body>
</html>
