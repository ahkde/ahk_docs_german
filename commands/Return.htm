<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Return - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Die Return-Anweisung kehrt aus einer Subroutine zurück, die zuvor via Funktionsaufruf, Gosub, Hotkey-Aktivierung, GroupActivate oder Ähnlichem angesprungen wurde." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>Return</h1>

<p>Kehrt aus einer Subroutine zurück, die zuvor via <a href="../Functions.htm">Funktionsaufruf</a>, <a href="Gosub.htm">Gosub</a>, <a href="../Hotkeys.htm">Hotkey</a>-Aktivierung, <a href="GroupActivate.htm">GroupActivate</a> oder Ähnlichem angesprungen wurde.</p>

<pre class="Syntax"><span class="func">Return</span> <span class="optional">, Ausdruck</span></pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Ausdruck</dt>
  <dd><p>Dieser Parameter funktioniert nur, wenn man <code>Return</code> innerhalb einer <a href="../Functions.htm">Funktion</a> verwendet.</p>
      <p>Da dieser Parameter ein <a href="../Variables.htm#Expressions">Ausdruck</a> ist, wären alle folgenden Zeilen gültige Beispiele:</p>
<pre>return 3
return "direkt geschriebene Zeichenkette"
return MeineVar 
return i + 1
return true  <em>; Gibt die Nummer 1 als "wahr" zurück.</em>
return ElementeAnzahl &lt; MaxElemente  <em>; Gibt einen wahren oder falschen Wert zurück.</em>
return FindeFarbe(ZielFarbe)</pre>
<p><strong>Bekannte Einschränkung</strong>: Aus Gründen der Abwärtskompatibilität und Benutzerfreundlichkeit sind die folgenden zwei Beispiele funktionsgemäß identisch:</p>
<pre>return MeineVar
return %MeineVar%</pre>
<p>Mit anderen Worten: Eine einzelne Variable, die von Prozentzeichen umschlossen ist, wird nicht als Ausdruck behandelt. Um das zu umgehen bzw. als Ausdruck zu behandeln, müssen Sie es mit runden Klammern umschließen; zum Beispiel: <code>return (%MeineVar%)</code>.</p></dd>

</dl>
<h2 id="Remarks">Bemerkungen</h2>
<p>Gibt es keinen Aufrufer, zu dem die Subroutine zurückkehren kann, wird <em>Return</em> stattdessen ein <a href="Exit.htm">Exit</a> durchführen.</p>
<p>Siehe <a href="../Functions.htm#return">Rückgabewerte an den Aufrufer</a>, wie mehrere Werte von einer Funktion an ihrem Aufrufer zurückgegeben werden können.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="../Functions.htm">Funktionen</a>, <a href="Gosub.htm">Gosub</a>, <a href="Exit.htm">Exit</a>, <a href="ExitApp.htm">ExitApp</a>, <a href="GroupActivate.htm">GroupActivate</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Das erste Return trennt den Hotkey von der Subroutine darunter. Wäre es nicht vorhanden, würde das Drücken des Hotkeys dazu führen, dass <code>Sleep 1000</code> zweimal ausgeführt wird.</p>
<pre>#z::
MsgBox Der Hotkey WIN+Z wurde gedrückt.
Gosub MeineSubroutine
return

MeineSubroutine:
Sleep 1000
return</pre>
</div>

</body>
</html>
