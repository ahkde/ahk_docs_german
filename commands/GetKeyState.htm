<!DOCTYPE HTML>
<html lang="de">
<head>
<title>GetKeyState() / GetKeyState - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Die GetKeyState-Funktion und der entsprechende Befehl überprüfen, ob eine Taste oben oder unten ist. Kann auch den Status eines Joysticks abrufen." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>GetKeyState() / GetKeyState</h1>
<p>Überprüft, ob eine Taste oben oder unten ist. Kann auch den Status eines Joysticks abrufen.</p>

<h2 id="function">GetKeyState()</h2>

<pre class="Syntax">
TasteIstUnten := <span class="func">GetKeyState</span>(TasteName <span class="optional">, Modus</span>)
</pre>
<h3 id="Function_Parameters">Parameter</h3>
<dl>

  <dt>TasteName</dt>
  <dd><p>Nahezu jedes Zeichen, das mit der Tastatur erzeugt werden kann, oder einer der Tastennamen aus der <a href="../KeyList.htm">Tastenliste</a>, darunter auch Maus- und Joystick-Tasten. Beispiele: B, 5, LWin, RControl, Alt, Enter, Escape, LButton, MButton, Joy1.</p>
      <p>Alternativ kann ein eindeutiger virtueller Tastencode wie vkFF angegeben werden. Virtuelle Tastencodes sind nützlich, um auf Tasten zu verweisen, die keine Namen haben (was aber selten vorkommt). Schauen Sie sich die Instruktion am unteren Ende der <a href="../KeyList.htm#SpecialKeys">Tastenliste</a> an, um zu erfahren, wie der virtuelle Tastencode einer solchen Taste ermittelt werden kann.</p> 
      <p><b>Bekannte Einschränkung</b>: Diese Funktion kann nicht zwischen zwei Tasten unterscheiden, die den gleichen virtuellen Tastencode haben, wie z. B. Left und NumpadLeft.</p></dd>

  <dt>Modus</dt>
  <dd><p>Dieser Parameter wird ignoriert, wenn der Status des Joysticks abgerufen wird.</p>
      <p>Lässt man diesen Parameter weg, wird standardmäßig der logische Zustand der Taste ermittelt. Das ist der Zustand, den das Betriebssystem oder aktive Fenster für diese Taste vermutet, aber nicht unbedingt dem physischen Zustand entsprechen muss.</p>
	  <p>Ansonsten können Sie einen der folgenden Buchstaben angeben:</p>
      <p><strong>P</strong>: Ruft den physischen Zustand ab (z. B. ob der Benutzer eine Taste physisch gedrückt hält). Der physische Zustand einer Tastatur- oder Maustaste ist in der Regel derselbe wie der logische Zustand, es sei denn, der Tastatur- und/oder Maus-Hook ist installiert, dann spiegelt dieser genau wider, ob der Benutzer die Taste physisch gedrückt hält oder nicht (vorausgesetzt, dass sie während der Ausführung des Skripts gedrückt gehalten wurde). Mit dem <a href="KeyHistory.htm">KeyHistory</a>-Befehl oder -Menüpunkt können Sie überprüfen, ob Ihr Skript ein Hook benutzt. Fügen Sie die Direktiven <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a> und/oder <a href="_InstallMouseHook.htm">#InstallMouseHook</a> in Ihr Skript ein, um die Installation eines Hooks zu erzwingen.</p>
      <p><strong>T</strong>: Ruft den Umschaltzustand ab. Bei Tasten außer <kbd>Feststell</kbd>, <kbd>Num</kbd> und <kbd>Rollen</kbd> ist der Umschaltzustand grundsätzlich 0, wenn das Skript gestartet wird, und wird nicht zwischen Prozessen synchronisiert.</p>
    </dd>

</dl>

<h3 id="Function_Return_Value">Rückgabewert</h3>
<p>Diese Funktion gibt 1 zurück, wenn die Taste unten ist (oder eingeschaltet ist), oder 0, wenn sie oben ist (oder ausgeschaltet ist). Für die speziellen Tasten des Joysticks wie Achsen und POV-Schalter <a href="#joystick">werden andere Werte abgerufen</a>.</p>
<p>Wenn <em>TasteName</em> ungültig ist oder der Zustand der Taste nicht ermittelt werden konnte, wird eine leere Zeichenkette zurückgegeben.</p>

<h2 id="command">GetKeyState</h2>
<p class="warning"><strong>Veraltet:</strong> Dieser Befehl ist nicht für neue Skripte empfohlen. Verwenden Sie stattdessen die <a href="#function">GetKeyState</a>-Funktion.</p>

<pre class="Syntax">
<span class="func">GetKeyState</span>, AusgabeVar, TasteName <span class="optional">, Modus</span>
</pre>
<h3 id="Command_Parameters">Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name einer Variable, in der der Zustand der Taste gespeichert werden soll, was entweder D für Unten (Down) oder U für Oben (Up) ist. Die Variable wird leer gemacht, wenn der Zustand der Taste nicht ermittelt werden konnte. Für die speziellen Tasten des Joysticks wie Achsen und POV-Schalter <a href="#joystick">werden andere Werte abgerufen</a>.</p>
      </dd>

  <dt>TasteName</dt>
  <dd><p>Nahezu jedes Zeichen, das mit der Tastatur erzeugt werden kann, oder einer der Tastennamen aus der <a href="../KeyList.htm">Tastenliste</a>, darunter auch Maus- und Joystick-Tasten. Beispiele: B, 5, LWin, RControl, Alt, Enter, Escape, LButton, MButton, Joy1.</p>
      <p>Alternativ kann ein eindeutiger virtueller Tastencode wie vkFF angegeben werden. Virtuelle Tastencodes sind nützlich, um auf Tasten zu verweisen, die keine Namen haben (was aber selten vorkommt). Schauen Sie sich die Instruktion am unteren Ende der <a href="../KeyList.htm#SpecialKeys">Tastenliste</a> an, um zu erfahren, wie der virtuelle Tastencode einer solchen Taste ermittelt werden kann.</p> 
      <p><b>Bekannte Einschränkung</b>: Dieser Befehl kann nicht zwischen zwei Tasten unterscheiden, die den gleichen virtuellen Tastencode haben, wie z. B. Left und NumpadLeft.</p></dd>

  <dt>Modus</dt>
  <dd><p>Dieser Parameter wird ignoriert, wenn der Status des Joysticks abgerufen wird.</p>
      <p>Lässt man diesen Parameter weg, wird standardmäßig der logische Zustand der Taste ermittelt. Das ist der Zustand, den das Betriebssystem oder aktive Fenster für diese Taste vermutet, aber nicht unbedingt dem physischen Zustand entsprechen muss.</p>
	  <p>Ansonsten können Sie einen der folgenden Buchstaben angeben:</p>
      <p><strong>P</strong>: Ruft den physischen Zustand ab (z. B. ob der Benutzer eine Taste physisch gedrückt hält). Der physische Zustand einer Tastatur- oder Maustaste ist in der Regel derselbe wie der logische Zustand, es sei denn, der Tastatur- und/oder Maus-Hook ist installiert, dann spiegelt dieser genau wider, ob der Benutzer die Taste physisch gedrückt hält oder nicht (vorausgesetzt, dass sie während der Ausführung des Skripts gedrückt gehalten wurde). Mit dem <a href="KeyHistory.htm">KeyHistory</a>-Befehl oder -Menüpunkt können Sie überprüfen, ob Ihr Skript ein Hook benutzt. Fügen Sie die Direktiven <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a> und/oder <a href="_InstallMouseHook.htm">#InstallMouseHook</a> in Ihr Skript ein, um die Installation eines Hooks zu erzwingen.</p>
      <p><strong>T</strong>: Ruft den Umschaltzustand ab. D bedeutet, dass die Taste "An" ist, und U bedeutet, dass sie "Aus" ist. Bei Tasten außer <kbd>Feststell</kbd>, <kbd>Num</kbd> und <kbd>Rollen</kbd> ist der Umschaltzustand grundsätzlich U, wenn das Skript gestartet wird, und wird nicht zwischen Prozessen synchronisiert.</p>
    </dd>

</dl>

<h2 id="joystick">Spezielle Tasten des Joysticks</h2>
<p>Wenn <em>TasteName</em> eine Joystick-Achse wie JoyX ist, wird eine Floating-Point-Zahl zwischen 0 und 100 zurückgegeben, die die Position des Joysticks als Prozentwert des Bewegungsbereichs dieser Achse repräsentiert. Das Format der Zahl kann via <a href="Format.htm">Format()</a> oder <a href="SetFormat.htm">SetFormat</a> geändert werden. Mit dem <a href="../scripts/index.htm#JoystickTest">Test-Skript</a> können Sie einen oder mehrere Joysticks analysieren.</p>
<p>Wenn <em>TasteName</em> JoyPOV ist, wird ein Wert zwischen 0 und 35900 zurückgegeben. Die folgenden ungefähren POV-Werte werden von den meisten Joysticks verwendet:</p>
<ul>
  <li>-1: keinen Winkel erkannt</li>
  <li>0: nach vorne gerichtet</li>
  <li>9000 (90 Grad): nach rechts gerichtet</li>
  <li>27000 (270 Grad): nach links gerichtet</li>
  <li>18000 (180 Grad): nach hinten gerichtet</li>
</ul>

<h2 id="Remarks">Bemerkungen</h2>
<p>Wenn es darum geht, auf eine Änderung des Tastenzustands zu warten, ist <a href="KeyWait.htm">KeyWait</a> besser geeignet als eine GetKeyState-Schleife.</p>
<p>Es kann vorkommen, dass Betriebssysteme mit ungewöhnlichen Tastaturtreibern den Zustand ihrer Tasten, insbesondere der Umschaltzustand von Tasten wie <kbd>Feststell</kbd>, nur langsam aktualisieren. Wenn Sie also vorhaben, direkt danach den Zustand von so einer Taste zu überprüfen, wäre es ratsam, ein <a href="Sleep.htm">Sleep</a> davorzusetzen, um dem Betriebssystem genug Zeit zum Aktualisieren des Tastenzustands zu verschaffen.</p>
<p>Beispiele zur Verwendung von GetKeyState mit einem Joystick finden Sie unter <a href="../misc/RemapJoystick.htm">Joystick-Neubelegung</a> und <a href="../scripts/index.htm#JoystickMouse">Joystick-Zu-Maus-Skript</a>.</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="KeyWait.htm">KeyWait</a>, <a href="../KeyList.htm">Tastenliste</a>, <a href="../misc/RemapJoystick.htm">Joystick-Neubelegung</a>, <a href="KeyHistory.htm">KeyHistory</a>, <a href="_InstallKeybdHook.htm">#InstallKeybdHook</a>, <a href="_InstallMouseHook.htm">#InstallMouseHook</a></p>

<h2 id="Examples">Beispiele</h2>

<div class="ex" id="ExCmdVsFn">
<p><a class="ex_number" href="#ExCmdVsFn"></a> Befehl vs. Funktion. Obwohl der erste Codeblock den Befehl und der zweite die Funktion verwendet, sind diese beiden Blöcke funktional identisch.</p>
<pre>GetKeyState, Status, RButton  <em>; Rechte Maustaste.</em>
GetKeyState, Status, Joy2  <em>; Die zweite Taste des ersten Joysticks.</em>

GetKeyState, Status, Shift
if (Status = "D")
    MsgBox Mindestens eine UMSCHALT-Taste ist unten.
else
    MsgBox Keine UMSCHALT-Taste unten.

GetKeyState, Status, CapsLock, T <em>;  D, wenn FESTSTELL-Taste AN ist, ansonsten U.</em>
</pre>
<pre>Status := GetKeyState("RButton")  <em>; Rechte Maustaste.</em>
Status := GetKeyState("Joy2")  <em>; Die zweite Taste des ersten Joysticks.</em>

if GetKeyState("Shift")
    MsgBox Mindestens eine UMSCHALT-Taste ist unten.
else
    MsgBox Keine UMSCHALT-Taste unten.

Status := GetKeyState("CapsLock", "T") <em>; True, wenn FESTSTELL-Taste AN ist, ansonsten False.</em>
</pre>
</div>

<div class="ex" id="ExRemap">
<p><a class="ex_number" href="#ExRemap"></a> Neubelegung. (Dieses Beispiel dient nur zur Veranschaulichung, da es einfacher wäre, auf das <a href="../misc/Remap.htm">interne Neubelegungs-Feature</a> zurückzugreifen.) Im folgenden Hotkey wird die Maustaste gedrückt gehalten, während NumpadAdd unten ist, was NumpadAdd effektiv zu einer Maustaste macht. Diese Methode kann auch genutzt werden, um eine Aktion zu wiederholen, während der Benutzer eine Taste gedrückt hält.</p>
<pre>*NumpadAdd::
MouseClick, left,,, 1, 0, D  <em>; Hält die linke Maustaste gedrückt.</em>
Loop
{
    Sleep, 10
    if !GetKeyState("NumpadAdd", "P")  <em>; Die Taste wurde losgelassen, also Schleife verlassen.</em>
        break
    <em>; ... fügen Sie hier beliebig andere Aktionen ein, die wiederholt werden sollen.</em>
}
MouseClick, left,,, 1, 0, U  <em>; Lässt die Maustaste los.</em>
return</pre>
</div>

<div class="ex" id="ExJoystick">
<p><a class="ex_number" href="#ExJoystick"></a> Macht das Verhalten einer Joystick-Taste abhängig von der Achsenposition des Joysticks.</p>
<pre>joy2:: 
JoyX := GetKeyState("JoyX")
if (JoyX &gt; 75)
    MsgBox Aktion #1 (Taste gedrückt, während Joystick nach rechts gedrückt wurde).
else if (JoyX &lt; 25)
    MsgBox Aktion #2 (Taste gedrückt, während Joystick nach links gedrückt wurde).
else
    MsgBox Aktion #3 (Taste gedrückt, während Joystick horizontal zentriert wurde).
return
</pre>
</div>

<p>Weitere Beispiele finden Sie unter <a href="../misc/RemapJoystick.htm">Joystick-Neubelegung</a> und <a href="../scripts/index.htm#JoystickMouse">Joystick-Zu-Maus-Skript</a>.</p>

</body>
</html>
