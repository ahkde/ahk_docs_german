<!DOCTYPE HTML>
<html lang="de">
<head>
<title>FileReadLine - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Der FileReadLine-Befehl liest eine bestimme Zeile aus einer Datei und speichert den Text in eine Variable." />
<meta name="ahk:equiv-v2" content="objects/File.htm#ReadLine" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>FileReadLine</h1>

<p>Liest eine bestimme Zeile aus einer Datei und speichert den Text in eine <a href="../Variables.htm">Variable</a>.</p>

<pre class="Syntax"><span class="func">FileReadLine</span>, AusgabeVar, Dateiname, ZeileNummer</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der <a href="../Variables.htm">Variable</a>, in der der ermittelte Text gespeichert werden soll.</p></dd>

  <dt>Dateiname</dt>
  <dd><p>Name der Datei, auf die zugegriffen werden soll. Wenn kein absoluter Pfad angegeben ist, wird die Datei im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet. Windows- und Unix-Formate werden unterstützt; das heißt, dass die Zeilen einer Datei entweder mit einem CR-LF-Paar (`r`n) oder LF-Zeichen (`n) enden können.</p></dd>

  <dt>ZeileNummer</dt>
  <dd><p>Welche Zeile gelesen werden soll (1 ist die erste Zeile, 2 die zweite und so weiter). Dieser Parameter kann ein <a href="../Variables.htm#Expressions">Ausdruck</a> sein.</p>
    <p>Ist die angegebene Zeilennummer größer als die Anzahl der Zeilen in der Datei, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt und der bisherige Inhalt von <em>AusgabeVar</em> beibehalten. Das geschieht auch, wenn die Zeile auf der angegebenen Zeilennummer die letzte Zeile ist, leer ist und nicht mit einem Zeilenumbruch/CRLF endet.</p></dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p>Bei Erfolg wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 0 gesetzt. Ansonsten wird ErrorLevel auf 1 gesetzt und der bisherige Inhalt von <em>AusgabeVar</em> beibehalten.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a> wird auf das Ergebnis der Systemfunktion GetLastError() gesetzt.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Es wird dringend empfohlen, diesen Befehl nur für kleine Dateien zu verwenden oder wenn nur eine einzige Textzeile benötigt wird. Eine <a href="LoopReadFile.htm">dateilesende Schleife</a> ist leistungsfähiger als FileReadLine, wenn es darum geht, eine große Anzahl von Zeilen nacheinander einzulesen und zu verarbeiten. Mit <a href="FileRead.htm">FileRead</a> kann eine komplette Datei in eine Variable eingelesen werden.</p>
<p>Alle Leerraumzeichen am Anfang und Ende der Zeile, wie z. B. Tabulator- und Leerzeichen, außer LF-Zeichen (`n), werden in <em>AusgabeVar</em> geschrieben. Leer- und Tabulatorzeichen können an beiden Enden einer Variable via Selbstzuweisung entfernt werden, während <a href="AutoTrim.htm">AutoTrim</a> aktiv ist (Standardeinstellung). Zum Beispiel: <code>MeineZeile = %MeineZeile%</code>.</p>
<p>Es können Zeilen mit einer Länge von bis zu 65534 Zeichen gelesen werden. Wenn die Länge einer Zeile dieses Limit überschreitet, können die restlichen Zeichen nicht mit diesem Befehl abgerufen werden (verwenden Sie stattdessen <a href="FileRead.htm">FileRead</a> oder eine <a href="LoopReadFile.htm">dateilesende Schleife</a>).</p>
<h2 id="Related">Siehe auch</h2>
<p><a href="FileOpen.htm">FileOpen()</a>/<a href="../objects/File.htm#ReadLine">File.ReadLine()</a>, <a href="FileRead.htm">FileRead</a>, <a href="FileAppend.htm">FileAppend</a>, <a href="LoopReadFile.htm">dateilesende Schleife</a>, <a href="IniRead.htm">IniRead</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Liest eine Textdatei Zeile für Zeile. Beachten Sie, dass das gleiche (aber mit besserer Leistung) erzielt werden kann, wenn Sie eine <a href="LoopReadFile.htm">dateilesende Schleife</a> verwenden.</p>
<pre>Loop
{
    FileReadLine, Zeile, C:\Meine Dokumente\Kontaktliste.txt, %A_Index%
    if ErrorLevel
        break
    MsgBox, 4, , Zeile #%A_Index% ist "%Zeile%".  Weiter?
    IfMsgBox, No
        return
}
MsgBox, Das Ende der Datei wurde erreicht oder es ist ein Problem aufgetreten.
return</pre>
</div>

</body>
</html>
