<!DOCTYPE HTML>
<html lang="de">
<head>
<title>InStr() - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Die InStr-Funktion sucht nach einem bestimmten Vorkommen einer Zeichenkette, beginnend von links oder rechts." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>InStr()</h1>

<p>Sucht nach einem bestimmten Vorkommen einer Zeichenkette, beginnend von links oder rechts.</p>

<pre class="Syntax">FundPos := <span class="func">InStr</span>(Heuhaufen, Nadel <span class="optional">, GroßKleinSensitiv := false, StartPos := 1, Vorkommen := 1</span>)</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Heuhaufen</dt>
  <dd><p>Eine Zeichenkette, deren Inhalt durchsucht werden soll.</p></dd>
  
  <dt>Nadel</dt>
  <dd><p>Der zu suchende Text.</p></dd>
  
  <dt>GroßKleinSensitiv</dt>
  <dd><p>Wenn der <em>GroßKleinSensitiv</em>-Parameter weggelassen wird oder 0 (false) ist, erfolgt die Suche nicht Groß-/Kleinschreibung-sensitiv (die Methode der Nichtsensitivität ist abhängig von <a href="StringCaseSense.htm">StringCaseSense</a>); ansonsten muss die Groß- und Kleinschreibung exakt übereinstimmen.</p></dd>

  <dt>StartPos</dt>
  <dd><p>Lässt man <em>StartPos</em> weg, wird standardmäßig 1 verwendet (der Anfang von <em>Heuhaufen</em>). Ansonsten kann eine 2 angegeben werden, um beim zweiten Zeichen zu beginnen, eine 3, um beim dritten Zeichen zu beginnen, und so weiter.</p>
      <p>Überschreitet <em>StartPos</em> die Länge von <em>Heuhaufen</em>, wird eine 0 zurückgegeben. <span class="ver">[AHK_L 57+]:</span> Wenn <em>StartPos</em> eine 0 oder negativ ist, erfolgt die Suche in umgekehrter Reihenfolge (von rechts nach links), beginnend beim Offset am Ende.</p>
      <p>Egal welchen Wert man als <em>StartPos</em> verwendet - der Rückgabewert ist immer relativ zum ersten <em>Heuhaufen</em>-Zeichen. Zum Beispiel ist die Position von "abc" in "123abc789" immer 4.</p></dd>

  <dt>Vorkommen <span class="ver">[AHK_L 57+]</span></dt>
  <dd><p>Lässt man <em>Vorkommen</em> weg, wird standardmäßig die erste Übereinstimmung von <em>Nadel</em> in <em>Heuhaufen</em> verwendet. Fügen Sie eine 2 in <em>Vorkommen</em> ein, um die Position der zweiten Übereinstimmung zurückzugeben, eine 3 für die dritte Übereinstimmung und so weiter.</p></dd>

  </dl>
  
<h2 id="Return_Value">Rückgabewert</h2>
<p>Diese Funktion gibt die Position der Zeichenkette <em>Nadel</em> zurück, die in der Zeichenkette <em>Heuhaufen</em> vorkommt. Position 1 ist das erste Zeichen; das liegt daran, dass 0 das Synonym für "falsch" ist, was sich gut als "nicht gefunden" eignet.</p>
<p>Das Vorkommen einer leeren Zeichenkette (<code>""</code>) kann an jeder Position gefunden werden; das heißt, wenn <em>Nadel</em> eine leere Zeichenkette ist, wird 1 zurückgegeben. Normalerweise übergibt man keine leere <em>Nadel</em>, daher wird sie in AutoHotkey v2 als Fehler behandelt.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Diese Funktion ist eine Kombination aus <a href="IfInString.htm">IfInString</a> und <a href="StringGetPos.htm">StringGetPos</a>.</p>
<p><a href="RegExMatch.htm">RegExMatch()</a> ist flexibler als InStr(), wenn es darum geht, ein bestimmtes Suchmuster (regulärer Ausdruck) innerhalb einer Zeichenkette zu finden. Zum Finden einer einfachen Zeichenkette ist InStr() besser geeignet.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="RegExMatch.htm">RegExMatch()</a>, <a href="StringGetPos.htm">StringGetPos</a>, <a href="IfInString.htm">IfInString</a>, <a href="StringCaseSense.htm">StringCaseSense</a>, <a href="IfIn.htm">if Var in/contains VergleichListe</a>, <a href="IfBetween.htm">if Var between</a>, <a href="IfIs.htm">if Var is Typ</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExRetValue">
<p><a class="ex_number" href="#ExRetValue"></a> Meldet die 1-basierte Position der Teilzeichenkette "abc" in der Zeichenkette "123abc789".</p>
<pre>MsgBox % InStr("123abc789", "abc") <em>; Gibt 4 zurück</em></pre>
</div>

<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Sucht nach einer <var>Nadel</var> im <var>Heuhaufen</var>.</p>
<pre>Heuhaufen := "The Quick Brown Fox Jumps Over the Lazy Dog"
Nadel := "Fox"
If InStr(Heuhaufen, Nadel)
    MsgBox, Die Zeichenkette wurde gefunden.
Else
    MsgBox, Die Zeichenkette wurde nicht gefunden.</pre>
</div>

<div class="ex" id="ExCaseSens">
<p><a class="ex_number" href="#ExCaseSens"></a> Demonstriert den Unterschied zwischen einer nicht-Groß-/Kleinschreibung-sensitiven und Groß-/Kleinschreibung-sensitiven Suche.</p>
<pre>Heuhaufen := "The Quick Brown Fox Jumps Over the Lazy Dog"
Nadel := "the"
MsgBox % InStr(Heuhaufen, Nadel, false, 1, 2) <em>; nicht-Groß-/Kleinschreibung-sensitive Suche, gibt die Startposition des zweiten Vorkommens zurück</em>
MsgBox % InStr(Heuhaufen, Nadel, true) <em>; Groß-/Kleinschreibung-sensitive Suche, gibt die Startposition des ersten Vorkommens zurück, das gleiche Ergebnis wie oben</em>
</pre>
</div>

</body>
</html>
