<!DOCTYPE HTML>
<html lang="de">
<head>
<title>ControlGet - Syntax &amp; Verwendung | AutoHotkey</title>
<meta name="description" content="Der ControlGet-Befehl ruft verschiedene Arten von Informationen über ein Steuerelement ab." />
<meta name="ahk:equiv-v2" content="commands/Control.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlGet</h1>

<p>Ruft verschiedene Arten von Informationen über ein Steuerelement ab.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, <a href="#SubCommands">Unterbefehl</a> <span class="optional">, Wert, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>

<h2 id="Parameters">Parameter</h2>
<dl>
  <dt>AusgabeVar</dt>
  <dd>Name der Variable, in der das Ergebnis von <em>Unterbefehl</em> gespeichert werden soll.</dd>

  <dt>Unterbefehl, Wert</dt>
  <dd>Diese Parameter sind voneinander abhängig und können wie <a href="#SubCommands">unten gezeigt</a> genutzt werden.</dd>

  <dt>Steuerelement</dt>
  <dd>
    <p>Kann entweder die ClassNN-Bezeichnung (Klassenname und Instanznummer des Steuerelements) oder der Text des Steuerelements sein, die beide mit dem internen Tool Window Spy ermittelt werden können. Verwendet man Text, ist das Übereinstimmungsverhalten abhängig von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>. Wenn dieser Parameter leer ist, wird das oberste Steuerelement des Zielfensters benutzt.</p>
    <p>Um ein Steuerelement via HWND-Nummer (eindeutige ID) anzusteuern, muss der <em>Steuerelement</em>-Parameter leer gelassen und <code>ahk_id %SteuerelementHwnd%</code> als <em>FensterTitel</em>-Parameter übergeben werden (funktioniert auch bei versteckten Steuerelementen, selbst wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> ausgeschaltet ist). Die HWND-Nummer eines Steuerelements kann üblicherweise via <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a> oder <a href="DllCall.htm">DllCall()</a> abgerufen werden.</p>
  </dd>

  <dt>FensterTitel</dt>
  <dd>Der Titel oder andere Möglichkeiten zum Identifizieren des Zielfensters. Weitere Informationen finden Sie unter <a href="../misc/WinTitle.htm">FensterTitel-Parameter</a>.</dd>

  <dt>FensterText</dt>
  <dd>Eine Zeichenkette, die in einem der Textelemente des Zielfensters enthalten ist (eventuell vorhandene Textelemente können mit dem internen Tool Window Spy aufgedeckt werden). Versteckte Textelemente werden nur erkannt, wenn <a href="DetectHiddenText.htm">DetectHiddenText</a> eingeschaltet ist.</dd>

  <dt>IgnoriereTitel</dt>
  <dd>Alle Fenster, die diesen Wert in ihren Titeln enthalten, werden ignoriert.</dd>

  <dt>IgnoriereText</dt>
  <dd>Alle Fenster, die diesen Wert in ihren Textelementen enthalten, werden ignoriert.</dd>
</dl>

<h2 id="SubCommands">Unterbefehle</h2>
<p>Geben Sie für <em>Unterbefehl</em> Folgendes an:</p>
<ul>
  <li><a href="#List">List</a>: Ruft eine Liste von Elementen aus einer ListView, ListBox, ComboBox oder DropDownList ab.</li>
  <li><a href="#Checked">Checked</a>: Ruft 1 ab, wenn die CheckBox abgehakt oder der Radio-Button eingeschaltet ist, oder 0, wenn nicht.</li>
  <li><a href="#Enabled">Enabled</a>: Ruft 1 ab, wenn die Interaktion mit dem Steuerelement aktiviert ist, oder 0, wenn sie deaktiviert ist.</li>
  <li><a href="#Visible">Visible</a>: Ruft 1 ab, wenn das Steuerelement sichtbar ist, oder 0, wenn es versteckt ist.</li>
  <li><a href="#Tab">Tab</a>: Ruft die Positionsnummer des aktuell ausgewählten Tabs eines SysTabControl32-Steuerelements ab.</li>
  <li><a href="#FindString">FindString</a>: Ruft die Positionsnummer eines ListBox- oder ComboBox-Listeneintrags ab, der exakt mit der Zeichenkette übereinstimmt.</li>
  <li><a href="#Choice">Choice</a>: Ruft den Namen des aktuell ausgewählten ListBox- oder ComboBox-Listeneintrags ab.</li>
  <li><a href="#LineCount">LineCount</a>: Ruft die Anzahl der Zeilen in einem Edit-Steuerelement ab.</li>
  <li><a href="#CurrentLine">CurrentLine</a>: Ruft die Zeilennummer in einem Edit-Steuerelement ab, auf der sich aktuell der Textcursor befindet.</li>
  <li><a href="#CurrentCol">CurrentCol</a>: Ruft die Spaltennummer in einem Edit-Steuerelement ab, auf der sich aktuell der Textcursor befindet.</li>
  <li><a href="#Line">Line</a>: Ruft den Text auf einer bestimmten Zeilennummer im Edit-Steuerelement ab.</li>
  <li><a href="#Selected">Selected</a>: Ruft den markierten Text in einem Edit-Steuerelement ab.</li>
  <li><a href="#Style">Style</a>: Ruft eine 8-stellige Hexadezimalzahl ab, die den Style des Steuerelements repräsentiert.</li>
  <li><a href="#ExStyle">ExStyle</a>: Ruft eine 8-stellige Hexadezimalzahl ab, die den erweiterten Style des Steuerelements repräsentiert.</li>
  <li><a href="#Hwnd">Hwnd</a> <span class="ver">[v1.1.04+]</span>: Ruft die HWND-Nummer (eindeutige ID) des Steuerelements ab.</li>
</ul>

<h3 id="List">List</h3>
<p>Ruft eine Liste von Elementen aus einer ListView, ListBox, ComboBox oder DropDownList ab. Für ListView können zusätzliche Optionen angegeben werden.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, List <span class="optional">, Optionen, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>

<h4 id="ListView">ListView</h4>
<p>Wenn der <em>Optionen</em>-Parameter weggelassen wird oder leer ist, wird der gesamte Text im Steuerelement abgerufen. Alle Zeilen, außer die letzte, enden mit einem Zeilenumbruchszeichen (`n). Innerhalb jeder Zeile enden alle Felder (Spalten), außer dem letzten, mit einem Tabulatorzeichen (`t).</p>
<p>Für <em>Optionen</em> können die folgenden Wörter angegeben werden (mehrere Wörter müssen mit Leer- oder Tabulatorzeichen voneinander getrennt werden):</p>
<table class="info">
  <tr>
    <th>Option</th>
    <th abbr="Beschr">Beschreibung</th>
  </tr>
  <tr>
    <td>Selected</td>
    <td>Ruft nur die markierten (hervorgehobenen) Zeilen ab. Sind keine vorhanden, wird <em>AusgabeVar</em> leer gemacht.</td>
  </tr>
  <tr>
    <td>Focused</td>
    <td>Ruft nur die fokussierte Zeile ab. Sind keine vorhanden, wird <em>AusgabeVar</em> leer gemacht.</td>
  </tr>
  <tr id="ColN">
    <td>Col4</td>
    <td>Ruft nur die vierte Spalte (Feld) ab (ersetzen Sie die 4 mit einer beliebigen Zahl).</td>
  </tr>
  <tr>
    <td>Count</td>
    <td>Ruft eine einzelne Zahl ab, die die Gesamtanzahl der Zeilen im Steuerelement repräsentiert.</td>
  </tr>
  <tr>
    <td>Count&nbsp;Selected</td>
    <td>Ruft die Anzahl der markierten (hervorgehobenen) Zeilen ab.</td>
  </tr>
  <tr>
    <td>Count&nbsp;Focused</td>
    <td>Ruft die Zeilennummer (Position) der fokussierten Zeile ab (0, wenn keine vorhanden ist).</td>
  </tr>
  <tr>
    <td>Count&nbsp;Col</td>
    <td>Ruft die Anzahl der Spalten im Steuerelement ab (oder -1, wenn der Zählerstand nicht ermittelt werden kann).</td>
  </tr>

</table>
<p class="note"><strong>Hinweis</strong>: Einige Anwendungen verhindern mit Absicht, dass ihr ListView-Text nicht abgerufen werden kann. In solchen Fällen wird ErrorLevel normalerweise auf 0 gesetzt (was auf Erfolg hinweist), allerdings werden alle Felder abgerufen, als wären sie leer. Beachten Sie zudem, dass <a href="_MaxMem.htm">#MaxMem</a> keinen Einfluss darauf hat, wie viel Text aus einer ListView abgerufen werden kann.</p>
<p>Bei Erfolg wird ErrorLevel auf 0 gesetzt. Bei Misserfolg wird ErrorLevel auf 1 gesetzt und <em>AusgabeVar</em> leer gemacht. Fehler treten auf, wenn: 1) das Zielfenster oder Zielsteuerelement nicht existiert; 2) das Zielsteuerelement nicht vom Typ SysListView32 ist; 3) der Prozess, der die ListView enthält, nicht geöffnet werden konnte, weil er gesperrt ist oder Benutzerrechte fehlen; 4) die <a href="#ColN">Col<em>N</em>-Option</a> auf eine nicht-existierende Spalte verweist.</p>
<p>Das folgende Beispiel zeigt, wie man mit einer <a href="LoopParse.htm">parsenden Schleife</a> einzelne Zeilen und Felder aus einer ListView extrahieren kann:</p>
<pre>ControlGet, AusgewählteZeilen, List, Selected, SysListView321, <i>FensterTitel</i>
Loop, Parse, AusgewählteZeilen, `n  <em>; Die Zeilen sind mit Zeilenumbruchszeichen (`n) getrennt.</em>
{
    ZeileNummer := A_Index
    Loop, Parse, A_LoopField, %A_Tab%  <em>; Die Felder (Spalten) jeder Zeile sind mit Tabulatorzeichen (A_Tab) getrennt.</em>
        MsgBox Zeile #%ZeileNummer% Spalte #%A_Index% enthält %A_LoopField%.
}</pre>
<p>Das folgende Beispiel zeigt, wie man <a href="PostMessage.htm">SendMessage</a> nutzen kann, um die Spalten einer ListView kleiner/größer zu machen:</p>
<pre>SendMessage, 0x101E, 0, 80, SysListView321, <i>FensterTitel</i>  <em>; 0x101E ist LVM_SETCOLUMNWIDTH.</em></pre>
<p>Im oberen Beispiel kennzeichnet 0 die erste Spalte (1 die zweite, 2 die dritte und so weiter). 80 ist die neue Breite. Ersetzen Sie 80 mit -1, um die Spaltenbreite automatisch an den Inhalt anzupassen. Ersetzen Sie 80 mit -2, um das gleiche zu tun, aber unter Berücksichtigung der Überschriftsbreite.</p>
<h4 id="ListBox_ComboBox_DropDownList">ListBox, ComboBox, DropDownList</h4>
<p>Es kann nur der gesamte Text aus dem Steuerelement abgerufen werden (das heißt, dass die oben genannten ListView-Optionen wie <em>Count</em> und <em>Selected</em> nicht unterstützt werden).</p>
<p>Alle Listeneinträge, außer der letzte, enden mit einem Zeilenumbruchszeichen (`n). Das folgende Beispiel zeigt, wie man eine <a href="LoopParse.htm">parsende Schleife</a> nutzen kann, um die Listeneinträge einzeln abzurufen:</p>
<pre>ControlGet, Einträge, List,, ComboBox1, <i>FensterTitel</i>
Loop, Parse, Einträge, `n
    MsgBox Eintragsnummer %A_Index% ist %A_LoopField%.</pre>

<h3 id="Checked">Checked</h3>
<p>Ruft 1 ab, wenn die CheckBox abgehakt oder der Radio-Button eingeschaltet ist, oder 0, wenn nicht.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, Checked <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>

<h3 id="Enabled">Enabled</h3>
<p>Ruft 1 ab, wenn die Interaktion mit <em>Steuerelement</em> aktiviert ist, oder 0, wenn sie deaktiviert ist.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, Enabled <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>

<h3 id="Visible">Visible</h3>
<p>Ruft 1 ab, wenn <em>Steuerelement</em> sichtbar ist, oder 0, wenn es versteckt ist.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, Visible <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>

<h3 id="Tab">Tab</h3>
<p>Ruft die Positionsnummer des aktuell ausgewählten Tabs eines SysTabControl32-Steuerelements ab.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, Tab <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>Der erste Tab ist 1, der Zweite ist 2 und so weiter. Das folgende Beispiel zeigt, wie man stattdessen die Gesamtanzahl der Tabs (Seiten) eines Tab-Steuerelements abrufen kann:</p>
<pre><a href="PostMessage.htm">SendMessage</a>, 0x1304,,, SysTabControl321, <i>FensterTitel</i>  <em>; 0x1304 ist TCM_GETITEMCOUNT.</em>
TabsAnzahl := ErrorLevel</pre>

<h3 id="FindString">FindString</h3>
<p>Ruft die Positionsnummer eines ListBox- oder ComboBox-Listeneintrags ab, der exakt mit <em>Zeichenkette</em> übereinstimmt.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, FindString, Zeichenkette <span class="optional">, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>Der erste Listeneintrag im Steuerelement ist 1, der Zweite ist 2 und so weiter. Wenn kein einziger Listeneintrag gefunden wurde, wird <em>AusgabeVar</em> leer gemacht und ErrorLevel auf 1 gesetzt.</p>

<h3 id="Choice">Choice</h3>
<p>Ruft den Namen des aktuell ausgewählten ListBox- oder ComboBox-Listeneintrags ab.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, Choice <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>Das folgende Beispiel zeigt, wie man stattdessen die Positionsnummer des ausgewählten Listeneintrags abrufen kann (verwenden Sie aber nur eine der beiden Zeilen):</p>
<pre><a href="PostMessage.htm">SendMessage</a>, 0x0188, 0, 0, ListBox1, <i>FensterTitel</i>  <em>; 0x0188 ist LB_GETCURSEL (für eine ListBox).</em>
<a href="PostMessage.htm">SendMessage</a>, 0x0147, 0, 0, ComboBox1, <i>FensterTitel</i>  <em>; 0x0147 ist CB_GETCURSEL (für eine DropDownList oder ComboBox).</em>
AuswahlPos := ErrorLevel&lt;&lt;32&gt;&gt;32  <em>; Konvertiert UInt in Int, um -1 im Falle eines nicht ausgewählten Eintrags zu haben.</em>
AuswahlPos += 1  <em>; Wandelt 0-basiert in 1-basiert um, damit z. B. 1 dem ersten Eintrag entspricht.</em></pre>

<h3 id="LineCount">LineCount</h3>
<p>Ruft die Anzahl der Zeilen in einem Edit-Steuerelement ab.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, LineCount <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>Alle Edit-Steuerelemente, auch leere, haben mindestens eine Zeile.</p>

<h3 id="CurrentLine">CurrentLine</h3>
<p>Ruft die Zeilennummer in einem Edit-Steuerelement ab, auf der sich aktuell der Cursor (Einfügemarke) befindet.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, CurrentLine <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>Die erste Zeile ist 1. Wenn im Steuerelement ein Textbereich markiert ist, enthält <em>AusgabeVar</em> die Zeilennummer, von wo aus die Markierung gestartet wurde.</p>

<h3 id="CurrentCol">CurrentCol</h3>
<p>Ruft die Spaltennummer in einem Edit-Steuerelement ab, auf der sich aktuell der Cursor (Einfügemarke) befindet.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, CurrentCol <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>Die erste Spalte ist 1. Wenn im Steuerelement ein Textbereich markiert ist, enthält <em>AusgabeVar</em> die Spaltennummer, von wo aus die Markierung gestartet wurde.</p>

<h3 id="Line">Line</h3>
<p>Ruft den Text auf Zeile <em>N</em> in einem Edit-Steuerelement ab.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, Line, N <span class="optional">, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>Die erste Zeile ist 1. Je nach Typ des Steuerelements endet <em>AusgabeVar</em> entweder mit einem CR-Zeichen (`r) oder einem CR-LF-Paar (`r`n). Wenn die angegebene Zeilennummer leer ist oder nicht existiert, wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt und <em>AusgabeVar</em> leer gemacht.</p>

<h3 id="Selected">Selected</h3>
<p>Ruft den markierten Text in einem Edit-Steuerelement ab.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, Selected <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>Falls kein Text markiert ist, wird <em>AusgabeVar</em> leer gemacht und ErrorLevel auf 0 gesetzt (was auf Erfolg hinweist). Es kann vorkommen, dass bestimmte Typen von Steuerelementen wie RichEdit20A in manchen Fällen nicht den korrekten Text erzeugen (z. B. Metapad).</p>

<h3 id="Style">Style</h3>
<p>Ruft eine 8-stellige Hexadezimalzahl ab, die den Style des Steuerelements repräsentiert.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, Style <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>In der <a href="../misc/Styles.htm">Style-Tabelle</a> finden Sie eine Auflistung einiger Styles.</p>

<h3 id="ExStyle">ExStyle</h3>
<p>Ruft eine 8-stellige Hexadezimalzahl ab, die den erweiterten Style des Steuerelements repräsentiert.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, ExStyle <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>In der <a href="../misc/Styles.htm">Style-Tabelle</a> finden Sie eine Auflistung einiger Styles.</p>

<h3 id="Hwnd">Hwnd <span class="ver">[v1.0.43.06+]</span></h3>
<p>Ruft die HWND-Nummer (eindeutige ID) des Steuerelements ab.</p>
<pre class="Syntax"><span class="func">ControlGet</span>, AusgabeVar, Hwnd <span class="optional">,, Steuerelement, FensterTitel, FensterText, IgnoriereTitel, IgnoriereText</span></pre>
<p>Zum Beispiel: <code>ControlGet, AusgabeVar, Hwnd,, Edit1, <i>FensterTitel</i></code>. Die HWND-Nummer (eindeutige ID) eines Steuerelements wird oft in Verbindung mit <a href="PostMessage.htm">PostMessage</a>, <a href="PostMessage.htm">SendMessage</a> und <a href="DllCall.htm">DllCall()</a> genutzt. Die HWND-Nummer eines Steuerelements kann auch via <a href="MouseGetPos.htm">MouseGetPos</a> abgerufen werden. So eine HWND-Nummer kann direkt als <a href="../misc/WinTitle.htm#ahk_id">ahk_id-FensterTitel</a> verwendet werden (das auch mit versteckten Steuerelementen funktioniert, selbst wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> ausgeschaltet ist).</p>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p><span class="ver">[v1.1.04+]</span>: Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Weitere Informationen finden Sie unter <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p>Bei Erfolg wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 0 gesetzt. Bei Misserfolg (z. B. wenn das Fenster oder Steuerelement nicht existiert) wird <a href="../misc/ErrorLevel.htm">ErrorLevel</a> auf 1 gesetzt und <em>AusgabeVar</em> leer gemacht.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Im Gegensatz zu Befehlen, die ein Steuerelement ändern, erfolgt nach ControlGet keine automatische Verzögerung; das heißt, dass <a href="SetControlDelay.htm">SetControlDelay</a> keine Wirkung auf ControlGet hat.</p>
<p><a href="MouseGetPos.htm">MouseGetPos</a> kann genutzt werden, um die ClassNN-Bezeichnung oder die HWND-Nummer (eindeutige ID) des Steuerelements unterhalb des Mauszeigers abzurufen. Mit <a href="WinGet.htm#ControlList">WinGet ControlList</a> kann eine Liste von Steuerelementen abgerufen werden, die in einem Fenster enthalten sind.</p>
<p>Fenstertitel und -texte sind Groß-/Kleinschreibung-sensitiv. Versteckte Fenster werden nur erkannt, wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> eingeschaltet ist.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="Control.htm">Control</a>, <a href="GuiControlGet.htm">GuiControlGet</a>, <a href="ControlMove.htm">ControlMove</a>, <a href="ControlGetText.htm">ControlGetText</a>, <a href="ControlSetText.htm">ControlSetText</a>, <a href="ControlGetPos.htm">ControlGetPos</a>, <a href="ControlClick.htm">ControlClick</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="ControlSend.htm">ControlSend</a>, <a href="WinGet.htm">WinGet</a></p>

<h2 id="Examples">Beispiele</h2>

<div class="ex" id="ExLine">
<p><a class="ex_number" href="#ExLine"></a> Ruft die erste Zeile des ersten Edit-Steuerelements ab.</p>
<pre>ControlGet, AusgabeVar, Line, 1, Edit1, Beliebiger Fenstertitel</pre>
</div>

<div class="ex" id="ExTab">
<p><a class="ex_number" href="#ExTab"></a> Ruft den aktuell aktiven Tab des ersten Tab-Steuerelements ab.</p>
<pre>ControlGet, WelcherTab, Tab,, SysTabControl321, Beliebiger Fenstertitel
if ErrorLevel
    MsgBox Es wurde ein Problem festgestellt.
else
    MsgBox Tab #%WelcherTab% ist aktiv.</pre>
</div>

</body>
</html>
